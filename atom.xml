<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>元立&#39;Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-03-01T07:54:36.083Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>LFSW元立</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>voron0.2r1配置踩坑</title>
    <link href="http://example.com/2024/03/01/voron0.2r1%E9%85%8D%E7%BD%AE%E8%B8%A9%E5%9D%91/"/>
    <id>http://example.com/2024/03/01/voron0.2r1%E9%85%8D%E7%BD%AE%E8%B8%A9%E5%9D%91/</id>
    <published>2024-03-01T07:52:57.000Z</published>
    <updated>2024-03-01T07:54:36.083Z</updated>
    
    <content type="html"><![CDATA[<h1 id="物料购买篇"><a href="#物料购买篇" class="headerlink" title="物料购买篇"></a>物料购买篇</h1><p>中文参考这个：<a href="https://www.bilibili.com/video/BV1G14y1D7Ne/?spm_id_from=333.788.recommend_more_video.0&vd_source=5b8bf6305b0fd9908d0f4a435e1f0d74">Voron0.2r1 史上最低装机方案 百元级 高速3D打印机 采购指南 有手就能装好的_哔哩哔哩_bilibili</a><br>我用的其中标准版，基本上都齐全。基本照着买就行<br>几个建议：</p><ul><li>工具：拧螺丝需要1.3mm、1.5mm、2mm这几个口径的内六角扳手,**尤其时1.3mm的内六角扳手，大部分的内六角套装没有！！！</li><li>可以把用来连接固定底座打印件的M3X40半圆头螺栓 （BHCS）换成M3X45以上的，连接时可能会出现滑丝问题，40的长度不太够，45的可以打深点</li><li>都备点插簧插片（4.8mm的），X254的各种插头，插座，还有压线钳（压线钳别买错了，有很多型号不支持X254），用来制作延长线（对于不会焊接的很友好）压线教程如下：<a href="https://www.bilibili.com/video/BV1Hf4y1b72P/?spm_id_from=333.337.search-card.all.click&vd_source=5b8bf6305b0fd9908d0f4a435e1f0d74">【soso工坊】JST XH X2.54端子制作教程_哔哩哔哩_bilibili</a></li><li>消隙螺母：那份表上说不要议买双切边的，但实际组装中感觉需要（没双切边的需要削掉一边），建议两种都买，一个不行换另一个</li><li>封箱板有一个是要两个的（左右版是一个文件，文件名没标注数量）</li><li>断料检测：气动接头要拆开，嫌麻烦可以不装</li><li>皮带有内芯是钢丝的聚酯皮带和内芯是玻璃纤维的橡胶皮带，买后者，怕买错就盖茨</li><li>屏幕可以不要，真的没啥用，资料还不好找</li><li>3X6和3X8的螺丝多买点，换成国标型材有些地方3X6的不够深需要换成3X8的</li><li>虽说不需要焊接，但还是需要一根尖头电烙铁的（热熔螺母需要）</li></ul><h1 id="刷机篇"><a href="#刷机篇" class="headerlink" title="刷机篇"></a>刷机篇</h1><h2 id="kiauh网络问题"><a href="#kiauh网络问题" class="headerlink" title="kiauh网络问题"></a>kiauh网络问题</h2><p>搞了ssr的局域网共享，最后还是gitee(<a href="https://gitee.com/miroky/kiauh">kiauh: kiauh 国内镜像 其中klipper和moonraker指向本账号的其他两个代码库。 V5.0.0同步更新。 V4.0.0的用户请在升级后运行path_patch_4to5.sh进行迁移。 迁移后请务必检查更新[virtual_sdcard]的路径到printer_data{_x}&#x2F;gcodes (gitee.com)</a> )</p><p>SSH连接推荐：MobaXterm的汉化版(<a href="https://github.com/RipplePiam/MobaXterm-Chinese-Simplified/releases/tag/v0.23.109">RipplePiam&#x2F;MobaXterm-Chinese-Simplified: MobaXterm 简体中文汉化版🌏🖥🖥🖥 【💌慢工精心制作，”提示”也汉化💻】 【😍控件布局精细调整】 (github.com)</a>)</p><h1 id="可能会遇到的坑"><a href="#可能会遇到的坑" class="headerlink" title="可能会遇到的坑"></a>可能会遇到的坑</h1><ul><li>铝型材切割不平（找个靠谱点的）</li><li>热床保险丝会顶到调平螺母（这保险丝不要也罢）</li><li>喷头漏塑料（拧紧点）</li><li>电机接线（看好线序，不拍接反怕接错）</li><li>胶带（胶带要遇热才能张牢）</li><li>电机配置（配置文件有写咋改，看不懂扔翻译）</li><li>拖链角度不够（拿刀自己修）</li></ul><h1 id="切片软件"><a href="#切片软件" class="headerlink" title="切片软件"></a>切片软件</h1><p>Cura5以上的都有V0的预设，<br>测试过4.8的，用V2.4的预设也可以（记得调尺寸）</p><p>以上</p><hr><h1 id="附："><a href="#附：" class="headerlink" title="附："></a>附：</h1><h2 id="价格表："><a href="#价格表：" class="headerlink" title="价格表："></a>价格表：</h2><table><thead><tr><th>分类</th><th>价格</th><th>来源</th></tr></thead><tbody><tr><td>打印套件</td><td>159</td><td>咸鱼</td></tr><tr><td>BMG挤出机套件</td><td>17</td><td>淘宝</td></tr><tr><td>主板</td><td>208</td><td>淘宝</td></tr><tr><td>散热</td><td>4.8</td><td>淘宝</td></tr><tr><td>闪迪64gTF卡</td><td>37</td><td>淘宝</td></tr><tr><td>雷赛35CM04步进电机*&#x2F;2</td><td>130</td><td>淘宝</td></tr><tr><td>42丝杆步进电机</td><td>59</td><td>淘宝</td></tr><tr><td>3010涡轮*&#x2F;2</td><td>18</td><td>淘宝</td></tr><tr><td>3010风扇*&#x2F;2</td><td>20</td><td>淘宝</td></tr><tr><td>欧姆龙微动开关D2F-5</td><td>3.48</td><td>淘宝</td></tr><tr><td>电源线</td><td>2.4</td><td>淘宝</td></tr><tr><td>AC-01插座</td><td>2.87</td><td>淘宝</td></tr><tr><td>5*&#x2F;20保险丝</td><td>1</td><td>淘宝</td></tr><tr><td>散热片</td><td>1.28</td><td>淘宝</td></tr><tr><td>消隙螺母</td><td>2.8</td><td>淘宝</td></tr></tbody></table><hr><p>现就写到这，过几天看看要不要出个视频</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;物料购买篇&quot;&gt;&lt;a href=&quot;#物料购买篇&quot; class=&quot;headerlink&quot; title=&quot;物料购买篇&quot;&gt;&lt;/a&gt;物料购买篇&lt;/h1&gt;&lt;p&gt;中文参考这个：&lt;a href=&quot;https://www.bilibili.com/video/BV1G14y1D7N</summary>
      
    
    
    
    <category term="心得分享" scheme="http://example.com/categories/%E5%BF%83%E5%BE%97%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="3D打印" scheme="http://example.com/tags/3D%E6%89%93%E5%8D%B0/"/>
    
  </entry>
  
  <entry>
    <title>CloudeFlare修改301重定向心得</title>
    <link href="http://example.com/2024/01/15/CloudeFlare%E4%BF%AE%E6%94%B9301%E9%87%8D%E5%AE%9A%E5%90%91%E5%BF%83%E5%BE%97/"/>
    <id>http://example.com/2024/01/15/CloudeFlare%E4%BF%AE%E6%94%B9301%E9%87%8D%E5%AE%9A%E5%90%91%E5%BF%83%E5%BE%97/</id>
    <published>2024-01-15T15:30:46.000Z</published>
    <updated>2024-02-27T14:08:43.261Z</updated>
    
    <content type="html"><![CDATA[<p>本人之前抱着好玩的心态搞了个“原神启动.space”(24年9月底到期，不续费)用于指向学校网址。凭借之前部署博客的经验将DNS解析类型改为CHAME类型。解析倒是能解析，但HTTPS证书过不去。</p><p>在高强度的网上冲浪中得知可以通过301重定向的方式解析，但腾讯云的解析要求双方都是备案域名（用来玩的备案啥啊）故先撂下此活。</p><p>在后面的网聊中得知可以使用CloudFlare的DNS解析进行301重定向，刚好考试也考完了（24.1.11），闲着也是闲着，就顺便研究一下。</p><p>最开始以为要进行域名转出，研究老半天。然后CloudeFlare告诉我说<strong>不支持中文域名转入</strong><br>我：？？？<br>麻了</p><p>研究了一下，发现不用那么麻烦，改DNS解析就行了。<br>我：……<br>真是绕了好大一圈啊。</p><p>参考文章如下：<br><a href="https://zhuanlan.zhihu.com/p/349090033#:~:text=1.%E9%A6%96%E5%85%88%EF%BC%8C%E7%A1%AE%E4%BF%9D%E4%BD%A0%E7%9A%84%E6%97%A7%E5%9F%9F%E5%90%8D%E7%9A%84DNS%E8%A7%A3%E6%9E%90%E5%9C%A8CloudFlare%EF%BC%8C%E6%96%B0%E5%9F%9F%E5%90%8D%E5%8F%AF%E4%BB%A5%E6%98%AF%E4%BB%BB%E6%84%8F%E7%9A%84DNS%E8%A7%A3%E6%9E%90%E5%95%86%EF%BC%9B%202.%E5%9C%A8%E2%80%9C%20DNS%20%E2%80%9D%E8%A7%A3%E6%9E%90%E4%B8%AD%EF%BC%8C%E5%B0%86%E5%9F%9F%E5%90%8D%E7%9A%84%E6%8C%87%E5%90%91%E6%94%B9%E6%88%90%E2%80%9C%208.8.8.8%20%E2%80%9D%EF%BC%8C%E5%B9%B6%E6%89%93%E5%BC%80%20CDN%E8%A7%A3%E6%9E%90%20%EF%BC%88%E7%82%B9%E4%BA%AE%E6%A9%99%E8%89%B2%E4%BA%91%EF%BC%89%EF%BC%9B,%2A%20%E2%80%9D%EF%BC%8C%E5%9C%A8%E2%80%9C%20%E9%80%89%E5%8F%96%E8%AE%BE%E7%BD%AE%20%E2%80%9D%E9%80%89%E6%8B%A9%E2%80%9C%20%E8%BD%AC%E5%8F%91URL%20%E2%80%9D%EF%BC%8C%E9%80%89%E6%8B%A9%E7%8A%B6%E6%80%81%E7%A0%81%E4%B8%BA%E2%80%9C%20301-%E6%B0%B8%E4%B9%85%E9%87%8D%E5%AE%9A%E5%90%91%20%E2%80%9D%EF%BC%9B">使用Cloudflare将旧域名通过301重定向至新域名 - 知乎 (zhihu.com)</a></p><p>简单地说就是在页面规则选项（在域名概述界面能找到入口）中创建一个页面规则，选项设置改到<em>转发URL</em>，状态码 301还是302无所谓，把目标URL写上去就行。</p><p>不过在那之前需要把域名的DNS从腾讯云改到CloudeFlare这边。<br>管理起来其实都一样。</p><p>免费版能有3个页面规则。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本人之前抱着好玩的心态搞了个“原神启动.space”(24年9月底到期，不续费)用于指向学校网址。凭借之前部署博客的经验将DNS解析类型改为CHAME类型。解析倒是能解析，但HTTPS证书过不去。&lt;/p&gt;
&lt;p&gt;在高强度的网上冲浪中得知可以通过301重定向的方式解析，但腾讯</summary>
      
    
    
    
    <category term="心得分享" scheme="http://example.com/categories/%E5%BF%83%E5%BE%97%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="日常记录" scheme="http://example.com/tags/%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理部分知识点</title>
    <link href="http://example.com/2024/01/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://example.com/2024/01/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/</id>
    <published>2024-01-09T14:07:25.000Z</published>
    <updated>2024-01-09T14:24:08.684Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><h2 id="1-语言"><a href="#1-语言" class="headerlink" title="1. 语言"></a>1. 语言</h2><ul><li>机器语言（机器码）</li><li>汇编语言</li><li>高级语言</li></ul><h3 id="语言处理程序："><a href="#语言处理程序：" class="headerlink" title="语言处理程序："></a>语言处理程序：</h3><p>由编译程序和解释程序等组成，它们能把高级语言翻译成机器语言</p><h2 id="2-计算机的组成、CPU"><a href="#2-计算机的组成、CPU" class="headerlink" title="2. 计算机的组成、CPU"></a>2. 计算机的组成、CPU</h2><h3 id="计算机组成："><a href="#计算机组成：" class="headerlink" title="计算机组成："></a>计算机组成：</h3><ul><li>存储器</li><li>运算器</li><li>控制器</li><li>输入设备</li><li>输出设备</li></ul><h3 id="计算机结构类型："><a href="#计算机结构类型：" class="headerlink" title="计算机结构类型："></a>计算机结构类型：</h3><ul><li>冯诺依曼架构（以运算器为中心）</li><li>现代计算机（以存储器为中心）</li><li>哈佛架构</li></ul><h3 id="CPU结构："><a href="#CPU结构：" class="headerlink" title="CPU结构："></a>CPU结构：</h3><ul><li>运算器（ALU）</li><li>控制器（CU）</li></ul><h2 id="3-总线"><a href="#3-总线" class="headerlink" title="3. 总线"></a>3. 总线</h2><h3 id="系统总线"><a href="#系统总线" class="headerlink" title="系统总线"></a>系统总线</h3><p>按传输信息分类：</p><ul><li>数据总线</li><li>地址总线</li><li>控制总线</li><li><strong>没有扩展总线</strong><br><strong>总线服用目的：减少总线条数</strong></li></ul><p>时钟周期<br>1个时钟周期&#x3D;1&#x2F;总线的时钟频率<br>总线的传输周期&#x3D;1个时钟周期×总线的传输周期<br>总线的传输频率&#x3D;总线宽度&#x2F;总线传输周期</p><p>集中控制的三种优先仲裁方式</p><ul><li>链式查询方式</li><li>计数器定时查询方式</li><li>独立请求方式</li></ul><h2 id="4-存储器"><a href="#4-存储器" class="headerlink" title="4. 存储器"></a>4. 存储器</h2><ul><li>随机存储器（RAM）<ul><li>静态RAM(SRAM)：触发器原理——快</li><li>动态PAM(DRAM)：电容充放电原理</li></ul></li><li>只读存储器（ROM）</li></ul><p>存储容量&#x3D;存储单元个数×存储字长<br>&#x3D;2^MAR×MDR位（位&#x2F;bit：b）<br>&#x3D;2^MAR×MDR&#x2F;8（字节：B）</p><h3 id="存储器有3个主要性能指标："><a href="#存储器有3个主要性能指标：" class="headerlink" title="存储器有3个主要性能指标："></a>存储器有3个主要性能指标：</h3><p>速度、容量、每位价格（简称位价）</p><h3 id="存储器速度、容量和位价的关系："><a href="#存储器速度、容量和位价的关系：" class="headerlink" title="存储器速度、容量和位价的关系："></a>存储器速度、容量和位价的关系：</h3><p>寄存器&gt;缓存&gt;主存&gt;磁盘&gt;磁带（前三者在主机内）</p><p> 缓存-主存层次和主存-辅存层次</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">  |---------------<br>  ↓              |<br>|---|-→|----|-→|----|-→|---|<br>|CPU|  |缓存|  |主存|  |辅存|<br>|---|←-|----|←-|----|←-|---|<br>  | 缓存-主存层次 ↑   主存-辅存层次<br>  ---------------|<br></code></pre></td></tr></table></figure><p>主存类型：<br>磁带、光盘、硬盘（HDD和SSD）</p><h2 id="5-DMA、周期挪用"><a href="#5-DMA、周期挪用" class="headerlink" title="5. DMA、周期挪用"></a>5. DMA、周期挪用</h2><p>I&#x2F;O设备与主机信息传送的控制方式</p><ul><li>程序查询方式</li><li>程序中断方式</li><li>DMA方式</li></ul><h4 id="窃取周期"><a href="#窃取周期" class="headerlink" title="窃取周期"></a>窃取周期</h4><ul><li>DMA的占有称为窃取或挪用，窃取的时间一般为一个存取周期</li></ul><p><strong>独立请求方式：</strong><br>一个请求信号，一个响应信号<br>输入输出操作，中断处理，总线操作</p><h2 id="6-指令（RISC-CISC）"><a href="#6-指令（RISC-CISC）" class="headerlink" title="6. 指令（RISC\CISC）"></a>6. 指令（RISC\CISC）</h2><p><strong>指令的一般格式：操作码和地址码</strong></p><table><thead><tr><th>格式：</th><th></th></tr></thead><tbody><tr><td>操作码</td><td>地址码</td></tr></tbody></table><h3 id="寻址方式："><a href="#寻址方式：" class="headerlink" title="寻址方式："></a>寻址方式：</h3><ol><li>立即寻址</li><li>直接寻址</li><li>隐含寻址</li><li>间接寻址</li></ol><h3 id="指令系统类型"><a href="#指令系统类型" class="headerlink" title="指令系统类型"></a>指令系统类型</h3><p>RISC：精简指令系统<br>CISC：复杂指令系统</p><h2 id="7-CPU"><a href="#7-CPU" class="headerlink" title="7. CPU"></a>7. CPU</h2><h3 id="CPU结构：-1"><a href="#CPU结构：-1" class="headerlink" title="CPU结构："></a>CPU结构：</h3><ul><li>运算器（ALU）</li><li>控制器（CU）</li></ul><h3 id="CPU功能："><a href="#CPU功能：" class="headerlink" title="CPU功能："></a>CPU功能：</h3><ul><li>指令控制</li><li>操作控制</li><li>时间控制</li><li>数据加工</li><li>处理中断</li></ul><h3 id="控制和状态寄存器："><a href="#控制和状态寄存器：" class="headerlink" title="控制和状态寄存器："></a>控制和状态寄存器：</h3><ul><li>MAR：存储器地址寄存器，用于存放将被访问的存储单元地址</li><li>MDR：存储器数据寄存器，用于存放欲存入存储器中的数据或从最近从存储器中读出的数据</li><li>PC：程序技术器，存放现行指令的地址，通常具有计数功能。当遇到转移类指令时，PC值可被修改</li><li>IR：指令寄存器，存放当前欲执行的指令</li></ul><h3 id="CPU工作的三种方式"><a href="#CPU工作的三种方式" class="headerlink" title="CPU工作的三种方式"></a>CPU工作的三种方式</h3><ul><li>程序查询方式</li><li>程序中断方式</li><li>DMA方式</li></ul><h3 id="DMA方式的特点："><a href="#DMA方式的特点：" class="headerlink" title="DMA方式的特点："></a>DMA方式的特点：</h3><ol><li>停止CPU访问主存</li><li>周期挪用：[[#窃取周期]]</li><li>DMA与CPU交替访问</li></ol><h3 id="后处理："><a href="#后处理：" class="headerlink" title="后处理："></a>后处理：</h3><p>当DMA的<strong>中断请求</strong>得到响应后，CPU停止源程序的执行，转去执行终端服务程序，做一些DMA的结束工作</p><hr><h1 id="计算例题"><a href="#计算例题" class="headerlink" title="计算例题"></a>计算例题</h1><h2 id="1-每秒12字节，求比特率bps-bit"><a href="#1-每秒12字节，求比特率bps-bit" class="headerlink" title="1. 每秒12字节，求比特率bps(bit)"></a>1. 每秒12字节，求比特率bps(bit)</h2><p>解：<br>2B&#x2F;s×8&#x3D;96bit&#x2F;s<br>1比特(bit)&#x3D;8字节(B)<br>bps&#x3D;bit&#x2F;s</p><p>比特率：bit&#x2F;s(进制位每秒)<br>8bit&#x3D;1B</p><h2 id="2-16k×32位"><a href="#2-16k×32位" class="headerlink" title="2. 16k×32位"></a>2. 16k×32位</h2><p>解：<br>地址线：14</p><blockquote><p>16k&#x3D;2^4+2^10&#x3D;2^14(这个14就是地址线)</p></blockquote><p>数据线：32</p><h2 id="3-字是32位，16MB的存储器，双字寻址，地址有多少个，寻址范围有多少？"><a href="#3-字是32位，16MB的存储器，双字寻址，地址有多少个，寻址范围有多少？" class="headerlink" title="3. 字是32位，16MB的存储器，双字寻址，地址有多少个，寻址范围有多少？"></a>3. 字是32位，16MB的存储器，双字寻址，地址有多少个，寻址范围有多少？</h2><p>解：<br>寻址范围：(0~2^21)-1<br>16MB÷(32b×2(双字寻址))&#x3D;2^4(&#x3D;16)×2^20(&#x3D;MB)×2^3(&#x3D;8字节转比特)&#x2F;2^6（&#x3D;32位×双字）&#x3D;2^21</p><h2 id="补码反码源码移码换算（16进制-H-转2进制-B-）"><a href="#补码反码源码移码换算（16进制-H-转2进制-B-）" class="headerlink" title="补码反码源码移码换算（16进制(H)转2进制(B)）"></a>补码反码源码移码换算（16进制(H)转2进制(B)）</h2><p>补码求原码：按位取反+1<br>补码&#x3D;反码+1<br>反码&#x3D;原码取反<br>移码&#x3D;补码的符号位取反<br>符号位：二进制数首位，0为正，1为负</p><p>负数补码：原码取反+1，符号位不变</p><p>正数原码，反码，补码都一样<br>负数的反码为对该数的原码出除符号位外按各位取反</p><ul><li><h2 id="一个存储器有16根地业线，8根数据线-求存储容量"><a href="#一个存储器有16根地业线，8根数据线-求存储容量" class="headerlink" title="一个存储器有16根地业线，8根数据线,求存储容量"></a>一个存储器有16根地业线，8根数据线,求存储容量</h2></li></ul><p>按位取值：2^16×8b&#x3D;2^19&#x3D;512(2^9)k(2^10)b<br>按字节取值：2^16×(8b&#x2F;8)&#x3D;64kB</p><hr><h1 id="主观题"><a href="#主观题" class="headerlink" title="主观题"></a>主观题</h1><h2 id="1-机器速度和什么因素有关？"><a href="#1-机器速度和什么因素有关？" class="headerlink" title="1. 机器速度和什么因素有关？"></a>1. 机器速度和什么因素有关？</h2><p>CPU、缓存、主存、CPU核心数、频率、GPU、辅存</p><h2 id="2-计算机系统有哪些，有什么作用？"><a href="#2-计算机系统有哪些，有什么作用？" class="headerlink" title="2. 计算机系统有哪些，有什么作用？"></a>2. 计算机系统有哪些，有什么作用？</h2><p>有哪些：<br>操作系统、编译器、数据库管理、存储器格式化、文件系统管理<br>有什么作用:</p><h2 id="3-Cache作用，CPU怎么访问Cache，主存，辅存？"><a href="#3-Cache作用，CPU怎么访问Cache，主存，辅存？" class="headerlink" title="3. Cache作用，CPU怎么访问Cache，主存，辅存？"></a>3. Cache作用，CPU怎么访问Cache，主存，辅存？</h2><p>作用：</p><ul><li>加快CPU访问主存的速度。</li></ul><ol><li>提高命中率</li><li>减少CPU等待时间</li><li>提高数据访问速度<br>怎么访问：</li></ol><ul><li>CPU通过直接映射等方式访问Cache，通过内存管理系统将数据或指令从辅存中读取到主存中，然后再从主存中读取到Cache中。</li></ul><ol><li>当CPU需要访问数据时，首先会在高速缓存中查找</li><li>如果1. 命中，则CPU可以直接从高速缓存中获取数据</li><li>如果1. 未命中，则CPU需要从主存中获取数据，并复制到Cache中</li></ol><hr><h1 id="补码反码源码移码换算示例-整数-："><a href="#补码反码源码移码换算示例-整数-：" class="headerlink" title="补码反码源码移码换算示例(整数)："></a>补码反码源码移码换算示例(整数)：</h1><p>9AH分别表示原码、反码、补码时对应的数是？<br>附：这转换成十进制是个负数</p><ul><li><p>原码：1001 1010<br>最高位为1，表示为负数<br>001 1010&#x3D;2^4(16)+2^3(8)+2^1(2)&#x3D;26<br>十进制为：-26</p></li><li><p>反码：1110 0101<br>最高位为1，表示负数<br>110 0110&#x3D;2^6(64)+2^5(32)+2^2(4)+2^0(1)&#x3D;101<br>十进制为：-101</p></li></ul><p>移码：0110 0110 （无论正负数，将补码的符号位取反）<br>最高位为0，表示正数<br>110 0110&#x3D;2^6(64)+2^5(32)+2^2(4)+2^1(2)&#x3D;102<br>十进制为：102</p><hr><h2 id="连续数据1-2-3-4-5-6-7-8-H-地址20-21-22-23-H"><a href="#连续数据1-2-3-4-5-6-7-8-H-地址20-21-22-23-H" class="headerlink" title="连续数据1 2 3 4 5 6 7 8 H,地址20 21 22 23 H"></a>连续数据1 2 3 4 5 6 7 8 H,地址20 21 22 23 H</h2><h3 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h3><ul><li>大端存放：<br>低位数据存在高位地址</li></ul><table><thead><tr><th align="left">大端存放：</th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="left">地址类型</td><td align="center">低位</td><td align="center">-</td><td align="center">-</td><td align="center">高位</td></tr><tr><td align="left">地址</td><td align="center">20</td><td align="center">21</td><td align="center">22</td><td align="center">23</td></tr><tr><td align="left">数据</td><td align="center">1 2</td><td align="center">3 4</td><td align="center">5 6</td><td align="center">7 8</td></tr><tr><td align="left">数据类型</td><td align="center">高位</td><td align="center">-</td><td align="center">-</td><td align="center">低位</td></tr></tbody></table><ul><li>小端存放：<br>低位数据存在低位地址</li></ul><table><thead><tr><th align="left">小端存放：</th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="left">地址类型</td><td align="center">低位</td><td align="center">-</td><td align="center">-</td><td align="center">高位</td></tr><tr><td align="left">地址</td><td align="center">20</td><td align="center">21</td><td align="center">22</td><td align="center">23</td></tr><tr><td align="left">数据</td><td align="center">7 8</td><td align="center">5 6</td><td align="center">3 4</td><td align="center">1 2</td></tr><tr><td align="left">数据类型</td><td align="center">低位</td><td align="center">-</td><td align="center">-</td><td align="center">高位</td></tr></tbody></table><h3 id="Other"><a href="#Other" class="headerlink" title="Other:"></a>Other:</h3><ul><li>大端存放（Big-endian）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">                    32-bit integer<br>    Menory          0A  0B  0C  0D<br>     |..|            |   |   |   |<br>a:   |0A| ←-----------   |   |   |<br>a+1: |0B| ←---------------   |   |<br>a+2: |0C| ←-------------------   |<br>a+3: |0D| ←-----------------------<br>#大端存放（Big-endian）<br></code></pre></td></tr></table></figure></li><li>小端存放（Little-endian）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">                    32-bit integer<br>    Menory          0A  0B  0C  0D<br>     |..|            |   |   |   |<br>a:   |0A| ←----------|---|---|---|<br>a+1: |0B| ←----------|---|---|<br>a+2: |0C| ←----------|---|<br>a+3: |0D| ←----------|<br>#小端存放（Little-endian）<br></code></pre></td></tr></table></figure></li></ul><hr><h2 id="32位计算机，总线16位，时钟频率为50MHz，总线最短周期是4个时钟周期，计算机的最大传输速率是多少？"><a href="#32位计算机，总线16位，时钟频率为50MHz，总线最短周期是4个时钟周期，计算机的最大传输速率是多少？" class="headerlink" title="32位计算机，总线16位，时钟频率为50MHz，总线最短周期是4个时钟周期，计算机的最大传输速率是多少？"></a>32位计算机，总线16位，时钟频率为50MHz，总线最短周期是4个时钟周期，计算机的最大传输速率是多少？</h2><p>解：<br>总线工作频率：50MHz&#x2F;4&#x3D;12.5Mhz<br>总线宽度：16bit&#x3D;2B<br>2B×12.5MHz&#x3D;25MBps</p><p>附：1Hz&#x3D;1T&#x2F;s<br>T：周期</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h1&gt;&lt;h2 id=&quot;1-语言&quot;&gt;&lt;a href=&quot;#1-语言&quot; class=&quot;headerlink&quot; title=&quot;1. 语言&quot;&gt;&lt;/a&gt;1. 语言&lt;</summary>
      
    
    
    
    <category term="心得分享" scheme="http://example.com/categories/%E5%BF%83%E5%BE%97%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="记组复习整理" scheme="http://example.com/tags/%E8%AE%B0%E7%BB%84%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>hexo导航页配置</title>
    <link href="http://example.com/2023/11/24/hexo%E5%AF%BC%E8%88%AA%E9%A1%B5%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2023/11/24/hexo%E5%AF%BC%E8%88%AA%E9%A1%B5%E9%85%8D%E7%BD%AE/</id>
    <published>2023-11-24T06:29:29.000Z</published>
    <updated>2023-11-24T06:42:57.037Z</updated>
    
    <content type="html"><![CDATA[<p>导航页只能添加页面，啊</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;导航页只能添加页面，啊&lt;/p&gt;
</summary>
      
    
    
    
    <category term="心得分享" scheme="http://example.com/categories/%E5%BF%83%E5%BE%97%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="日常记录" scheme="http://example.com/tags/%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>20.网络自动化编程</title>
    <link href="http://example.com/2023/11/20/21.%E7%BD%91%E7%BB%9C%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BC%96%E7%A8%8B/"/>
    <id>http://example.com/2023/11/20/21.%E7%BD%91%E7%BB%9C%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BC%96%E7%A8%8B/</id>
    <published>2023-11-20T07:00:10.000Z</published>
    <updated>2023-11-24T07:18:22.673Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Python代码"><a href="#Python代码" class="headerlink" title="Python代码"></a>Python代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python">telnetlib 登录方式<br><br><span class="hljs-keyword">import</span> telnetlib<span class="hljs-comment"># 调用模块（telnetlib）</span><br><span class="hljs-keyword">import</span> time<br><br>password = <span class="hljs-string">&#x27;Huawei@123&#x27;</span><br>username = <span class="hljs-string">&#x27;huawei&#x27;</span><br><br>tn = telnetlib.Telnet(<span class="hljs-string">&#x27;192.168.56.100&#x27;</span>,<span class="hljs-number">3000</span>)<span class="hljs-comment"># 输入登录的设备 IP 和端口号（如果是默认端口，则无添加 3000）</span><br><br><br><br>tn.read_until(<span class="hljs-string">b&#x27;Username:&#x27;</span>)<span class="hljs-comment"># 登录设备，读取到 Username 时</span><br>tn.write(username.encode(<span class="hljs-string">&#x27;ascii&#x27;</span>) + <span class="hljs-string">b&#x27;\n&#x27;</span>)<span class="hljs-comment"># 执行写操作，写入 huawei</span><br><br>tn.read_until(<span class="hljs-string">b&#x27;Password:&#x27;</span>)<span class="hljs-comment"># 读取到 Password 时</span><br>tn.write(password.encode(<span class="hljs-string">&#x27;ascii&#x27;</span>) + <span class="hljs-string">b&#x27;\n&#x27;</span>)<span class="hljs-comment"># 写入密码 Huawei@123</span><br><br>tn.read_until(<span class="hljs-string">b&#x27;&lt;LSW1&gt;&#x27;</span>)<br>tn.write(<span class="hljs-string">&#x27;sys&#x27;</span>.encode(<span class="hljs-string">&#x27;ascii&#x27;</span>) + <span class="hljs-string">b&#x27;\n&#x27;</span>)<br><br>tn.read_until(<span class="hljs-string">b&#x27;[LSW1]&#x27;</span>)<br>tn.write(<span class="hljs-string">&#x27;vlan 10&#x27;</span>.encode(<span class="hljs-string">&#x27;ascii&#x27;</span>) + <span class="hljs-string">b&#x27;\n&#x27;</span>)<span class="hljs-comment"># 进入设备系统配置视图，并且创建 VLAN 10</span><br><br>tn.read_until(<span class="hljs-string">b&#x27;[LSW1-vlan10]&#x27;</span>)<br>tn.write(<span class="hljs-string">&#x27;display vlan&#x27;</span>.encode(<span class="hljs-string">&#x27;ascii&#x27;</span>) + <span class="hljs-string">b&#x27;\n&#x27;</span>)<br><br>conf = tn.read_until(<span class="hljs-string">b&#x27;[LSW1-vlan10]&#x27;</span>).decode(<span class="hljs-string">&quot;ascii&quot;</span>)<span class="hljs-comment"># 打印 vlan 信息</span><br><span class="hljs-built_in">print</span>(conf)<br><br>time.sleep(<span class="hljs-number">1</span>)<br>tn.close()<span class="hljs-comment"># 关闭  telnetlib</span><br></code></pre></td></tr></table></figure><hr><h1 id="交换设备配置"><a href="#交换设备配置" class="headerlink" title="交换设备配置"></a>交换设备配置</h1><h3 id="1-创建用户"><a href="#1-创建用户" class="headerlink" title="1. 创建用户"></a>1. 创建用户</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">aaa<br>local-user huawei password cipher Huawei<br>local-user huawei privilege level 15<br>local-user huawei service-type telnet// 指定服务类型，以及修改用户等级（3 及以上的等级）<br></code></pre></td></tr></table></figure><h3 id="2-指定用户的接入方式和认证模式"><a href="#2-指定用户的接入方式和认证模式" class="headerlink" title="2. 指定用户的接入方式和认证模式"></a>2. 指定用户的接入方式和认证模式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">user-interface vty 0 4<br>authentication-mode aaa<br>protocol inbound all// 进入 VTY 接口，修改认证模式，和接入协议<br></code></pre></td></tr></table></figure><h3 id="3-（可选）"><a href="#3-（可选）" class="headerlink" title="3. （可选）"></a>3. （可选）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">telnet server port   3000// 修改设备端口号<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Python代码&quot;&gt;&lt;a href=&quot;#Python代码&quot; class=&quot;headerlink&quot; title=&quot;Python代码&quot;&gt;&lt;/a&gt;Python代码&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c</summary>
      
    
    
    
    <category term="技术记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="路由交换基础" scheme="http://example.com/tags/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>19.PPPoE笔记</title>
    <link href="http://example.com/2023/11/19/20.PPPoE%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2023/11/19/20.PPPoE%E7%AC%94%E8%AE%B0/</id>
    <published>2023-11-19T07:00:10.000Z</published>
    <updated>2023-11-24T07:18:36.056Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PPPoE"><a href="#PPPoE" class="headerlink" title="PPPoE"></a>PPPoE</h1><p>作用：把 PPP 数据封装在以太网数据帧上，实现灵活的组网，又能利用 PPP 实现用户的身份认证（授权、审计等功能）</p><h2 id="1-PPPoE-发现阶段"><a href="#1-PPPoE-发现阶段" class="headerlink" title="1. PPPoE 发现阶段"></a>1. PPPoE 发现阶段</h2><ol><li>通过广播发送 PADI 发现服务器，并请求相关的服务功能</li><li>服务器收到后，会响应客户的请求，并且回复一个 PADO（携带服务器能够提供的功能）</li><li>客户端收到 PADO（可能会有多个）客户端会采用第一份收到的 PADO<ul><li>会根据 PADO 的服务器 ID 进行回复（标识客户端选用的是那一台服务器）</li><li>通过 PADR 进行响应，同时请求会话 ID</li></ul></li><li>服务器收到 PADR 后，会查看报文内的服务器 ID 是否本服务器，如果是则响应 PADS（提供一个会话 ID）、如果不是本服务器（不做响应）</li></ol><h2 id="2-PPPoE-的会话阶段"><a href="#2-PPPoE-的会话阶段" class="headerlink" title="2. PPPoE 的会话阶段"></a>2. PPPoE 的会话阶段</h2><p>参考 PPP 协商过程</p><ol><li>LCP 协商（协：魔术字、MRU、认证类型等）</li><li>认证阶段（PAP 或 CHAP 协商）</li><li>NCP 协商（协商 IP 地址是否合法，分配 IP 地址及网段信息）</li></ol><ul><li>补充：客户设备需要完成 1 和 2 的协商才能进行网络访问</li></ul><h2 id="3-PPPoE-会话终止阶段"><a href="#3-PPPoE-会话终止阶段" class="headerlink" title="3. PPPoE 会话终止阶段"></a>3. PPPoE 会话终止阶段</h2><h2 id="当用户下线时才会进入会话终止，释放网络参数信息1-双方互相发送-PADT-请求，用于终止网络会话（释放-IP-地址、会话-ID-等信息）"><a href="#当用户下线时才会进入会话终止，释放网络参数信息1-双方互相发送-PADT-请求，用于终止网络会话（释放-IP-地址、会话-ID-等信息）" class="headerlink" title="当用户下线时才会进入会话终止，释放网络参数信息1. 双方互相发送 PADT 请求，用于终止网络会话（释放 IP 地址、会话 ID 等信息）"></a>当用户下线时才会进入会话终止，释放网络参数信息<br>1. 双方互相发送 PADT 请求，用于终止网络会话（释放 IP 地址、会话 ID 等信息）</h2><hr><h1 id="配置命令"><a href="#配置命令" class="headerlink" title="配置命令"></a>配置命令</h1><h2 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h2><ol><li>创建虚拟模板，用于绑定以太网接口使用<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface Virtual-Template0// 创建 VT0 虚拟模板<br>ppp authentication-mode pap // 开启 PAP 认证<br>ip address 100.1.1.3 24// 配置 PPPoE 服务器通信的 IP 地址<br></code></pre></td></tr></table></figure></li><li>创建地址池，为拨号用户分配 IP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">ip pool client// 创建地址池，client 为名称<br>network 100.1.1.0 mask 24// 分配的网段<br>excluded-ip-address 100.1.1.3 // 排除服务器已经使用的 IP 地址<br><br>interface Virtual-Template0// 进入 VT0 虚拟模板<br>remote address pool client// 调用地址池 client（名称不能错误）<br></code></pre></td></tr></table></figure></li><li>进入 PPPoE 服务器的通信接口<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface GigabitEthernet0/0/0<br>pppoe-server bind Virtual-Template 0// 调用 VT0 虚拟模板<br></code></pre></td></tr></table></figure></li><li>服务器需要为不同的接入用户，创建账号<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">aaa<br>local-user ar1 password cipher Huawei@123// 创建账户<br>local-user ar1 service-type ppp// 指定该账户的服务类型为：ppp<br></code></pre></td></tr></table></figure></li></ol><hr><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><ol><li>创建虚拟拨号接口 D0<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface Dialer0// 创建 D0 接口<br>ppp pap local-user ar1 password simple Huawei@123// 根据运营商分配的账户，配置相关的认证信息<br>ip address ppp-negotiate// 通过认证后，向 PPPoE 服务器，获取 IP 地址<br><br>dialer user ar1// 指定虚拟拨号接口的名称（先配置名称，才能指定 ID）<br>dialer bundle 1// 指定虚拟拨号接口的 ID<br></code></pre></td></tr></table></figure></li><li>进入客户端与运营商互联的物理接口<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface G0/0/1// 进入物理接口<br>pppoe-client dial-bundle-number 1 // 根据 D0 的接口 ID 进行绑定<br></code></pre></td></tr></table></figure></li><li>私网与公网互访配置<ol><li><p>配置静态路由</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">ip route-static 0.0.0.0  0  Dialer0// 下一跳接口，必须为虚拟的拨号接口<br></code></pre></td></tr></table></figure></li><li><p>NAT 转换</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">acl 2000 <br>rule permit source any// 允许所有的数据包通过<br><br>interface Dialer0<br>nat  outbound  2000// 进入虚拟拨号的接口调用 NAT（物理接口的所有信息都通过虚拟接口映射）<br></code></pre></td></tr></table></figure></li></ol></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;PPPoE&quot;&gt;&lt;a href=&quot;#PPPoE&quot; class=&quot;headerlink&quot; title=&quot;PPPoE&quot;&gt;&lt;/a&gt;PPPoE&lt;/h1&gt;&lt;p&gt;作用：把 PPP 数据封装在以太网数据帧上，实现灵活的组网，又能利用 PPP 实现用户的身份认证（授权、审计等功能）</summary>
      
    
    
    
    <category term="技术记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="路由交换基础" scheme="http://example.com/tags/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>18.PPP配置命令</title>
    <link href="http://example.com/2023/11/18/19.PPP%E9%85%8D%E7%BD%AE%E5%91%BD%E4%BB%A4/"/>
    <id>http://example.com/2023/11/18/19.PPP%E9%85%8D%E7%BD%AE%E5%91%BD%E4%BB%A4/</id>
    <published>2023-11-18T07:00:10.000Z</published>
    <updated>2023-11-24T07:18:46.276Z</updated>
    
    <content type="html"><![CDATA[<h1 id="认证方（ISP-侧）"><a href="#认证方（ISP-侧）" class="headerlink" title="认证方（ISP 侧）"></a>认证方（ISP 侧）</h1><ol><li>AAA 创建本地用户<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">aaa<br>local-user hjp password cipher Huawei@123// 进入 AAA 视图，创建运营商分配的用户账号<br> local-user hjp service-type ppp// 指定服务类型为：PPP<br></code></pre></td></tr></table></figure></li><li>进入运营商的接口开启 PAP 或者 CHAP 认证<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface Pos2/0/0<br>ppp authentication-mode pap // 如：开启 PAP 认证，对接入用户的身份进行检查<br></code></pre></td></tr></table></figure></li><li>可选配置（为接入的用户分配 IP 地址）</li></ol><ul><li>创建地址池<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">ip pool A<br> network 100.1.1.0 mask 24// 网段一般使用运营商接口相同的子网段<br> excluded-ip-address 100.1.1.2 // 排除运营商侧的接口 IP ，以防分配后冲突<br></code></pre></td></tr></table></figure></li></ul><ol start="4"><li>接口调用地址池<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext"><br>interface Pos2/0/0<br>remote address pool A// 为接入用户分配 IP 地址（使用地址池 A）<br></code></pre></td></tr></table></figure></li></ol><ul><li>完成以上配置后，需要重启接口<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">shutdown / undo  shutdown // 因为 PPP 协议一旦协商成功，则不会重新进行参数协商<br></code></pre></td></tr></table></figure></li></ul><hr><h1 id="CHAP-认证"><a href="#CHAP-认证" class="headerlink" title="CHAP 认证"></a>CHAP 认证</h1><ul><li>如果运营商的接口配置了用户名，则用户接口可以不用配置密码</li></ul><ol><li>运营商<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface Pos2/0/0<br>ppp authentication-mode chap // 开启 CHAP 认证<br>ppp chap user hjp// 接口配置了用户名信息（可选）<br></code></pre></td></tr></table></figure></li><li>用户设备只需要接口开启用户名，并使用全局密码即可<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">aaa<br>local-user hjp password cipher Huawei@123// 进入 AAA 视图，创建运营商分配的用户账号<br> local-user hjp service-type ppp// 指定服务类型为：PPP<br><br>interface Pos2/0/0<br>ppp chap user hjp// 接口配置用户名即可完成认证<br></code></pre></td></tr></table></figure></li></ol><ul><li>如果运营商的接口没有用户名</li></ul><ol><li>运营商<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface Pos2/0/0<br>ppp authentication-mode chap // 开启 CHAP 认证<br></code></pre></td></tr></table></figure></li><li>用户必须在接口配置密码，使用接口密码来通过认证<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface Pos2/0/0<br>ppp chap user hjp<br>ppp chap password simple Huawei@123// 如果运营商没有提供用户名，则用户的接口必须配置密码,使用接口密码来通过认证，并且接口配置优先于全局配置<br></code></pre></td></tr></table></figure></li></ol><hr><hr><h1 id="用户侧配置（被认证方）"><a href="#用户侧配置（被认证方）" class="headerlink" title="用户侧配置（被认证方）"></a>用户侧配置（被认证方）</h1><ol><li>配置运营商提供的账号密码，通过身份认证<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface Pos2/0/0<br>ppp pap local-user hjp password simple Huawei@123// 配置账户密码<br></code></pre></td></tr></table></figure></li><li>如果运营商侧配置了地址池，则用户可以获取公网 IP 地址<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface Pos2/0/0<br>ip address ppp-negotiate// 地址使用 PPP 协商方式获取<br></code></pre></td></tr></table></figure>当配置完账户信息和地址协商后，需要重启接口<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">shutdown  / undo   shutdown<br></code></pre></td></tr></table></figure>重新协商后，可以通过<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">display  ip  interface  brief  // 查看接口是否获取 IP 地址，如果有则代表认证通过，否则失败<br></code></pre></td></tr></table></figure></li><li>内网与外网互访的配置<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">acl 2000<br>rule permit source any// 创建 ACL 匹配需要进行 NAT 转换的数据包（默认允许所有流量转换）<br></code></pre></td></tr></table></figure></li><li>接口调用 NAT （Easy ip）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface Pos2/0/0<br>nat outbound  2000// 使用 P2/0/0 接口的 IP 地址进行 NAT 转换<br></code></pre></td></tr></table></figure></li><li>配置访问外网服务器的 IP 路由<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">ip route-static  0.0.0.0   0   Pos2/0/0// PPP 协议无需指定下一跳地址，只需要指定出去的接口即可<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;认证方（ISP-侧）&quot;&gt;&lt;a href=&quot;#认证方（ISP-侧）&quot; class=&quot;headerlink&quot; title=&quot;认证方（ISP 侧）&quot;&gt;&lt;/a&gt;认证方（ISP 侧）&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;AAA 创建本地用户&lt;figure class=&quot;highlig</summary>
      
    
    
    
    <category term="技术记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="路由交换基础" scheme="http://example.com/tags/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>17.NAT</title>
    <link href="http://example.com/2023/11/17/18.NAT/"/>
    <id>http://example.com/2023/11/17/18.NAT/</id>
    <published>2023-11-17T07:00:10.000Z</published>
    <updated>2023-11-24T07:18:53.387Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网络地址转换（NAT）"><a href="#网络地址转换（NAT）" class="headerlink" title="网络地址转换（NAT）"></a>网络地址转换（NAT）</h1><p>作用：实现私网和公网的地址转换，实现私网和公网互访，提升公网地址的利用率</p><h2 id="源-NAT（把数据包的-源-IP-地址-进行转换）"><a href="#源-NAT（把数据包的-源-IP-地址-进行转换）" class="headerlink" title="源 NAT（把数据包的  源 IP 地址  进行转换）"></a>源 NAT（把数据包的  源 IP 地址  进行转换）</h2><ol><li><p>静态 NAT：实现固定的 1:1 转换（1 个私网地址转换为 1 个公网地址）</p><ul><li>优点：实现私网与公网的互访</li><li>缺点：无法缓解公网地址不足的问题，需要 1:1 转换</li></ul></li><li><p>动态 NAT：实现灵活的 1:1 转换（1 个私网地址转换为 1 个公网地址）</p><ul><li>优点：实现私网与公网的互访，并且私网与公网地址并非固定，可以灵活匹配</li><li>缺点：只能实现 1:1 的转换，公网地址被占用时，新用户无法进行转换</li></ul></li><li><p>NAPT：可以实现 N:1 的转换（N 个私网地址转换为 1 个公网地址，实现公网地址的复用）</p><ul><li>为了区分不同的私网地址，NAPT 通过转换协议号或 TCP、UDP 的端口号来区分私网设备</li><li>优点：实现私网与公网的互访，灵活匹配及多对一转换</li><li>缺点：至少需要 2 个公网地址，一个出口路由器用于通信的公网 IP 地址，一个是 NAT 地址池的公网 IP 地址</li></ul></li><li><p>Easy IP：可以实现 N:1 的转换（N 个私网地址转换为 1 个公网地址，实现公网地址的复用）</p><ul><li>与 NAPT 一样可以转换端口号，并且无需使用 NAT 地址池，直接使用出口路由器的接口 IP 地址即可完成转换</li><li>优点：进一步减少了公网地址的浪费</li></ul></li></ol><h2 id="目的-NAT（把数据包的-目的-IP-地址-进行转换）"><a href="#目的-NAT（把数据包的-目的-IP-地址-进行转换）" class="headerlink" title="目的 NAT（把数据包的  目的 IP 地址  进行转换）"></a>目的 NAT（把数据包的  目的 IP 地址  进行转换）</h2><ul><li>NAT Server：可以 1：1 的实现公网地址转换为私网地址，常用于公司内部服务器是私网的，为公网用户提供服务</li></ul><h1 id="配置命令："><a href="#配置命令：" class="headerlink" title="配置命令："></a>配置命令：</h1><h4 id="1-NAPT-配置"><a href="#1-NAPT-配置" class="headerlink" title="1. NAPT 配置"></a>1. NAPT 配置</h4><ol><li>创建 NAT 地址池<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">nat address-group 1 100.1.1.10  100.1.1.10// 地址池为：100.1.1.10 — 100.1.1.10 代表只有 1 个公网地址<br>   注意：地址池 IP 必须与出口路由器接口的 IP 地址相同网段（且是未被使用的地址）<br></code></pre></td></tr></table></figure></li><li>创建 ACL<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">acl 2000<br>rule permit source  192.168.1.0  0.0.0.255// 匹配需要进行 NAT 转换的流量<br></code></pre></td></tr></table></figure></li><li>接口调用<br>进入出口路由器，公网侧的接口<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface  G0/0/X<br>nat outbound  2000  address-group 1 // 代表该接口发出的 192.168.1.0/24 网段流量，转换为 100.1.1.10<br></code></pre></td></tr></table></figure></li></ol><h4 id="2-Easy-IP-配置"><a href="#2-Easy-IP-配置" class="headerlink" title="2. Easy IP 配置"></a>2. Easy IP 配置</h4><ol><li><p>创建 ACL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">acl 2000<br>rule permit source  192.168.1.0  0.0.0.255// 匹配需要进行 NAT 转换的流量<br></code></pre></td></tr></table></figure></li><li><p>接口调用<br>进入出口路由器，公网侧的接口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface  G0/0/X<br>nat outbound  2000 // 代表该接口发出的 192.168.1.0/24 网段流量，转换为接口 G0/0/X 地址<br></code></pre></td></tr></table></figure></li><li><p>NAT Server 配置</p></li><li><p>进入接口调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface G0/0/X// 进入出口路由器的公网侧接口<br>nat server global 100.1.1.200 inside 192.168.1.2// 把公网地址  100.1.1.200 转换为私网的  192.168.1.2<br>当公网用户访问 100.1.1.200 时，设备收到会转换为私有服务器的 IP 地址<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网络地址转换（NAT）&quot;&gt;&lt;a href=&quot;#网络地址转换（NAT）&quot; class=&quot;headerlink&quot; title=&quot;网络地址转换（NAT）&quot;&gt;&lt;/a&gt;网络地址转换（NAT）&lt;/h1&gt;&lt;p&gt;作用：实现私网和公网的地址转换，实现私网和公网互访，提升公网地址的利</summary>
      
    
    
    
    <category term="技术记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="路由交换基础" scheme="http://example.com/tags/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>16.高级ACL</title>
    <link href="http://example.com/2023/11/16/17.%E9%AB%98%E7%BA%A7ACL/"/>
    <id>http://example.com/2023/11/16/17.%E9%AB%98%E7%BA%A7ACL/</id>
    <published>2023-11-16T07:00:10.000Z</published>
    <updated>2023-11-24T08:35:27.325Z</updated>
    
    <content type="html"><![CDATA[<p>基础ACL：匹配信息（源 IP 地址）<br>高级ACL：匹配信息（五元组：源 IP、目的 IP、源端口、目的端口、协议号）控制更加灵活</p><hr><h1 id="基础ACL的不足："><a href="#基础ACL的不足：" class="headerlink" title="基础ACL的不足："></a>基础ACL的不足：</h1><ol><li>只能针对源 IP 地址进行过滤，当源设备和目的设备的地址不一，且数量多的时候无法使用基础 ACL 进行控制</li><li>无法针对协议进行过滤（如：UDP、TCP、OSPF 等协议）</li></ol><h1 id="高级-ACL-配置"><a href="#高级-ACL-配置" class="headerlink" title="高级 ACL 配置"></a>高级 ACL 配置</h1><ol><li>创建 ACL<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">acl 3000  // 创建 ACL（3000—3999 为高级 ACL）<br></code></pre></td></tr></table></figure></li><li>命名规则 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">rule 5 deny ip source 192.168.1.1 0 destination 172.16.1.200 0<br>// 代表过滤的是 IP 流量，并且必须同时满足源地址为 192.168.1.1 和目的地址为 172.16.1.200 才会被过滤<br><br>rule 10 deny udp source 192.168.1.2 0 destination 172.16.1.200 0<br>// 代表过滤的流量为 UDP 流量，并且同时满足源 IP 地址为：192.168.1.2 0 目的地址为 172.16.1.200 才会被过滤<br><br>rule 15 deny icmp source 1.1.1.1 0 destination 2.2.2.2 0<br>// 代表过滤的为 ICMP 协议流量，不允许源为 1.1.1.1 且目的为 2.2.2.2 的 ICMP 流量通过<br></code></pre></td></tr></table></figure></li><li>调用<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface G0/0/X（需要判断接口的方向）<br>traffic-filter  inbound 或 outbound acl 3000<br></code></pre></td></tr></table></figure></li></ol><ul><li>补充：高级 ACL 也能结合时间使用<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">time-range A 09:00 to 18:00 working-day<br>// 例如：添加时间 A 为工作日 9点到下午6点生效<br></code></pre></td></tr></table></figure></li><li>补充到 ACL 中<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">rule 15 deny icmp source 1.1.1.1 0 destination 2.2.2.2 0  time-range A<br>// 可以使得命令在有时间段中生效<br></code></pre></td></tr></table></figure></li></ul><p><code>display this</code> 可以查看 time-range A 的配置（系统配置视图）<br><code>display acl all </code>可以查看 ACL 规则是否在生效时间段内</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;基础ACL：匹配信息（源 IP 地址）&lt;br&gt;高级ACL：匹配信息（五元组：源 IP、目的 IP、源端口、目的端口、协议号）控制更加灵活&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;基础ACL的不足：&quot;&gt;&lt;a href=&quot;#基础ACL的不足：&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="技术记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="路由交换基础" scheme="http://example.com/tags/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>15.ACL基础</title>
    <link href="http://example.com/2023/11/15/16.ACL%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2023/11/15/16.ACL%E5%9F%BA%E7%A1%80/</id>
    <published>2023-11-15T07:00:10.000Z</published>
    <updated>2023-11-24T07:19:35.857Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ACL-分类"><a href="#ACL-分类" class="headerlink" title="ACL 分类"></a>ACL 分类</h1><ol><li>基本 ACL（2000—2999）用于匹配 IP 源地址，可以作用与流量的过滤，也能用于路由过滤</li><li>高级 ACL（3000—3999）用于匹配五元组（源、目的 IP 地址，源、目的端口号，协议号）可以作用与流量的过滤，也能用于路由过滤</li></ol><h1 id="匹配规则"><a href="#匹配规则" class="headerlink" title="匹配规则"></a>匹配规则</h1><ol><li>默认情况下，ACL 会根据 rule 的顺序来进行匹配，一旦匹配成功则立刻执行策略（config 模式）</li><li>深度匹配，会根据掩码长度来进行匹配，约精确约优先（auto 模式）</li></ol><ul><li>例如：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">rule permit source any<br>rule deny source  192.168.1.0 0.0.0.255<br></code></pre></td></tr></table></figure></li><li>结果：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">rule 5  deny source  192.168.1.0 0.0.0.255<br>rule 10 permit source any<br></code></pre></td></tr></table></figure></li><li>补充：<br>  ACL 对于数据流，没有拒绝的默认放行（对于策略路由来说，ACL 默认为 permit）<br>  ACL 对于路由条目，没有放行的默认拒绝（对于路由策略来说，ACL 默认为 deny）</li></ul><p>策略路由（针对流量生效 traffic-filter、traffic-policy 等）<br>路由策略（针对路由条目生效，route-policy、filter-policy、policy-based-route 等）</p><h1 id="步长"><a href="#步长" class="headerlink" title="步长"></a>步长</h1><p>当没有设置 rule 编号时，ACL 会自动为规则设定编号，每次编号加 5 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">rule  permit source any  =  rule 5 permit source any<br>rule  permit source 1.1.1.1  0  = rule 10  permit source 1.1.1.1  0 <br></code></pre></td></tr></table></figure><p>步长也可以修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">acl<br>step  10// 把 ACL 步长修改为 10，后续的策略每个策略之间默认 + 10<br></code></pre></td></tr></table></figure><h1 id="匹配信息"><a href="#匹配信息" class="headerlink" title="匹配信息"></a>匹配信息</h1><p> 基本 ACL（匹配源 IP 地址）<br>0 代表匹配的信息固定，1 代表匹配的信息可变<br>例如：192.168.1.1  0.0.0.0 （0.0.0.0 代表匹配所有的 bit 位，匹配信息为 192.168.1.1&#x2F;32）<br>例如：192.168.1.0  0.0.0.255（0.0.0 代表固定匹配，255 代表模糊匹配可以改变，匹配信息为192.168.1.0&#x2F;24）即：地址为：0—255</p><h2 id="例1：匹配-10-1-1-0-24-中的奇数路由"><a href="#例1：匹配-10-1-1-0-24-中的奇数路由" class="headerlink" title="例1：匹配 10.1.1.0&#x2F;24 中的奇数路由"></a>例1：匹配 10.1.1.0&#x2F;24 中的奇数路由</h2><p>10.1.1  固定，通配符  0.0.0<br>最后的 8 bit  128、64、32、16  8、4、2、1<br>这个 1 必须固定<br>0000  0001    （路由前缀）<br>1111  1110    （通配符，代表只匹配最后的 1，其他可变）<br>10.1.1.1  0.0.0.254(匹配奇数路由)</p><h2 id="例2：匹配-10-1-1-0-24-中的偶数路"><a href="#例2：匹配-10-1-1-0-24-中的偶数路" class="headerlink" title="例2：匹配 10.1.1.0&#x2F;24 中的偶数路"></a>例2：匹配 10.1.1.0&#x2F;24 中的偶数路</h2><p>最后的 8 bit，最后一位 1 必须为 0<br>0000  0000   1111  1110  代表最后一个 bit 必须为 0 其他都可以修改<br>10.1.1.0  0.0.0.254（匹配偶数路由）</p><h2 id="例3：匹配-10-1-1-0-24-中-0—127-的数字"><a href="#例3：匹配-10-1-1-0-24-中-0—127-的数字" class="headerlink" title="例3：匹配  10.1.1.0&#x2F;24 中 0—127 的数字"></a>例3：匹配  10.1.1.0&#x2F;24 中 0—127 的数字</h2><p>最后 8 bit 中，不能包含 128<br>0000  0000  0111  1111   代表 128 必须为 0，其他可变（0—127）<br>10.1.1.0   0.0.0.127</p><h1 id="配置命令"><a href="#配置命令" class="headerlink" title="配置命令"></a>配置命令</h1><p>策略路由（traffic-filter）对本设备产生的流量，出方向过滤无效（只对转发的流量生效）<br>ACL 是匹配工具，无法对数据包进行过滤或者放行，需要结合策略路由或者路由策略等工具才能生效</p><p>例如：过滤 192.168.1.1 的源数据包。允许 192.168.1.2 的源数据包访问</p><h2 id="方法一：代表放行-192-168-1-2-拒绝所有的其他流量"><a href="#方法一：代表放行-192-168-1-2-拒绝所有的其他流量" class="headerlink" title="方法一：代表放行 192.168.1.2  拒绝所有的其他流量"></a>方法一：代表放行 192.168.1.2  拒绝所有的其他流量</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">acl  2000<br>rule permit source 192.168.1.2  0<br>rule deny source any// 代表放行 192.168.1.2  拒绝所有的其他流量<br></code></pre></td></tr></table></figure><h2 id="方法二：拒绝-192-168-1-1-的流量，其余默认放行"><a href="#方法二：拒绝-192-168-1-1-的流量，其余默认放行" class="headerlink" title="方法二：拒绝 192.168.1.1 的流量，其余默认放行"></a>方法二：拒绝 192.168.1.1 的流量，其余默认放行</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">acl 2000<br>rule deny source 192.168.1.1  0// 拒绝 192.168.1.1 的流量，其余默认放行<br></code></pre></td></tr></table></figure><p>接口调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface G0/0/X（判断接口的方向）<br>traffic-filter  （inbound / outbound ） acl  2000// 根据不同的方向 ACL 效果也不一致<br></code></pre></td></tr></table></figure><h2 id="补充配置：可以让-ACL-的规则根据不同的时间来执行"><a href="#补充配置：可以让-ACL-的规则根据不同的时间来执行" class="headerlink" title="补充配置：可以让 ACL 的规则根据不同的时间来执行"></a>补充配置：可以让 ACL 的规则根据不同的时间来执行</h2><h3 id="例1：工作日允许-9-00-to-18-00-员工访问网络"><a href="#例1：工作日允许-9-00-to-18-00-员工访问网络" class="headerlink" title="例1：工作日允许 9:00 to 18:00 员工访问网络"></a>例1：工作日允许 9:00 to 18:00 员工访问网络</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">time-range A 09:00 to 18:00 working-day  // 代表 9 点到下午 6 点的工作日，生效<br><br>acl 2000<br>rule 1  permit  source any   time-range A// 生效时间按 time-range A 执行<br>rule 2  deny source any<br></code></pre></td></tr></table></figure><h3 id="例2：希望凌晨-12-点到第二天的-7-点无法访问网络（周末除外）"><a href="#例2：希望凌晨-12-点到第二天的-7-点无法访问网络（周末除外）" class="headerlink" title="例2：希望凌晨 12 点到第二天的 7 点无法访问网络（周末除外）"></a>例2：希望凌晨 12 点到第二天的 7 点无法访问网络（周末除外）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">time-range A 0:00  to  7:00  working-day<br><br>acl 2000<br>rule 1 deny source any  time-range A<br>rule 2 permit source  any<br></code></pre></td></tr></table></figure><h3 id="例3："><a href="#例3：" class="headerlink" title="例3："></a>例3：</h3><p>晚上 8 点到第二天的早上 8 点无法访问网络</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">time-range A 20:00  to  0:00  daily <br>time-range A 0:00  to  8:00  daily <br><br>acl 2000<br>rule 1 deny source any  time-range A<br>rule 2 permit source  any<br></code></pre></td></tr></table></figure><h2 id="查看是否生效"><a href="#查看是否生效" class="headerlink" title="查看是否生效"></a>查看是否生效</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">display acl all// active 代表生效  inactive 代表无效<br></code></pre></td></tr></table></figure><p>修改时间（进入用户视图）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">clock datetime 9:00:00 2023-5-4// 可以修改设备时间（默认时间跟随电脑系统）<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ACL-分类&quot;&gt;&lt;a href=&quot;#ACL-分类&quot; class=&quot;headerlink&quot; title=&quot;ACL 分类&quot;&gt;&lt;/a&gt;ACL 分类&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;基本 ACL（2000—2999）用于匹配 IP 源地址，可以作用与流量的过滤，也能用于路由过滤</summary>
      
    
    
    
    <category term="技术记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="路由交换基础" scheme="http://example.com/tags/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>14.WLAN基础</title>
    <link href="http://example.com/2023/11/14/15.WLAN%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2023/11/14/15.WLAN%E5%9F%BA%E7%A1%80/</id>
    <published>2023-11-14T07:00:10.000Z</published>
    <updated>2023-11-24T07:19:44.462Z</updated>
    
    <content type="html"><![CDATA[<h1 id="组网概念"><a href="#组网概念" class="headerlink" title="组网概念"></a>组网概念</h1><ol><li><p>二层组网：<br>AP 与 AC 处于相同的广播域中，可以通过二层广播的方式进行连接（一般相同 VLAN 和相同网段）<br>适合于中小型的网络，AP 数量较少</p></li><li><p>三层组网：<br>AP 与 AC 处于三层网络（一般隔离广播域或者地理位置，需要通过路由器或交换设备三层互联）<br>AP 与 AC 之间需要通过可达的单播路由传递数据（跨 VLAN 和不同网段的组网）<br>适合于大型组网，AP 数量较多且分布在不同的接入交换设备上</p></li><li><p>直通连接<br>AC 在数据的转发路径上（参与数据转发）</p></li><li><p>旁挂连接<br>AC 不参与数据转发，连接在核心或汇聚交换机上，只提供 AP 管理和用户信息认证等功能</p></li></ol><h1 id="工作过程"><a href="#工作过程" class="headerlink" title="工作过程"></a>工作过程</h1><h2 id="1-AP-与-AC-建立-CAPWAP-隧道"><a href="#1-AP-与-AC-建立-CAPWAP-隧道" class="headerlink" title="1. AP 与 AC 建立 CAPWAP 隧道"></a>1. AP 与 AC 建立 CAPWAP 隧道</h2><p>隧道用于 AC 与 AP 之间传输控制信息（配置命令、状态检测报文、用户上线等信息）<br>也可以通过隧道转发的方式，由 AP 与 AC 之间的隧道转发用户数据</p><h3 id="1-AP-设备需要先通过-DHCP-服务器或者-IP-地址信息"><a href="#1-AP-设备需要先通过-DHCP-服务器或者-IP-地址信息" class="headerlink" title="1.  AP 设备需要先通过 DHCP 服务器或者 IP 地址信息"></a>1.  AP 设备需要先通过 DHCP 服务器或者 IP 地址信息</h3><p>（在 AP 接入的交换机上配置 DHCP 地址池）</p><h4 id="配置命令：（接入交换设备）"><a href="#配置命令：（接入交换设备）" class="headerlink" title="配置命令：（接入交换设备）"></a>配置命令：（接入交换设备）</h4><ol><li>开启 DHCP 服务<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">dhcp enable <br></code></pre></td></tr></table></figure></li><li>配置地址池（全局接口）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">vlan  10// 创建管理 VLAN 10<br>interface  VLANIF 10<br>ip address  192.168.10.254  24// 网关地址及地址池范围<br>dhcp select  interface // 开启接口地址池模式<br>dhcp server excluded-ip-address 192.168.10.100（排除 AC 设备的 IP 地址）<br></code></pre></td></tr></table></figure></li></ol><h3 id="2-交换机连接-AP-的接口需要放行相关-VLAN，保证接入的-AP-设备能够获取到-IP-地址"><a href="#2-交换机连接-AP-的接口需要放行相关-VLAN，保证接入的-AP-设备能够获取到-IP-地址" class="headerlink" title="2.  交换机连接 AP 的接口需要放行相关 VLAN，保证接入的 AP 设备能够获取到 IP 地址"></a>2.  交换机连接 AP 的接口需要放行相关 VLAN，保证接入的 AP 设备能够获取到 IP 地址</h3><p>（如：DHCP 服务器在 VLANIF 10，交换机的接口需要放行 VLAN 10 并且配置 PVID 10）</p><h4 id="配置命令：进入（LSW-与-AP-连接的接口）"><a href="#配置命令：进入（LSW-与-AP-连接的接口）" class="headerlink" title="配置命令：进入（LSW 与 AP 连接的接口）"></a>配置命令：进入（LSW 与 AP 连接的接口）</h4><ol><li>进入接口<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface  G0/0/X<br></code></pre></td></tr></table></figure></li><li>放行 VLAN 以及配置 PVID<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">port link-type  trunk<br>port trunk allow-pass  vlan  10（允许管理 VLAN 通，让 AP 获取 IP 地址）<br>port trunk pvid vlan 10// 因为 AP 发出的数据帧不带标签，需要向 VLANIF 10 获取 IP 地址，必须添加 VLAN 10 的标签<br>（收到一个不带标签的数据帧，设备会根据 PVID 打上标签）<br></code></pre></td></tr></table></figure></li></ol><ul><li>查看：在 AP 设备上 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">display  ip  interface  brief   // 查看 AP 是否获取到 IP 地址（如果没有检测以上的配置命令，如果配置无误，则重启 AP）<br></code></pre></td></tr></table></figure></li></ul><h3 id="3-AC-设备需要手工配置-IP-地址（如：二层组网）则在-VLANIF-10-中配置相同网段的-IP-地址并且AC、交换机以及与-AP-互联的端口都要放行-VLAN-10（保障-AP-能与-AC-通信）"><a href="#3-AC-设备需要手工配置-IP-地址（如：二层组网）则在-VLANIF-10-中配置相同网段的-IP-地址并且AC、交换机以及与-AP-互联的端口都要放行-VLAN-10（保障-AP-能与-AC-通信）" class="headerlink" title="3. AC 设备需要手工配置 IP 地址（如：二层组网）则在 VLANIF 10 中配置相同网段的 IP 地址并且AC、交换机以及与 AP 互联的端口都要放行 VLAN 10（保障 AP 能与 AC 通信）"></a>3. AC 设备需要手工配置 IP 地址（如：二层组网）则在 VLANIF 10 中配置相同网段的 IP 地址并且AC、交换机以及与 AP 互联的端口都要放行 VLAN 10（保障 AP 能与 AC 通信）</h3><h4 id="配置命令：（AC）"><a href="#配置命令：（AC）" class="headerlink" title="配置命令：（AC）"></a>配置命令：（AC）</h4><ol><li>创建通信接口<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">vlan 10<br>interface vlanif 10<br>192.168.10.100  24// 在 AC 上配置 VLAN 及 IP 地址<br></code></pre></td></tr></table></figure></li><li>进入 AC 与 LSW 互联的接口，放行 VLAN 10<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface G0/0/X<br>port link-type  trunk<br>port trunk allow-pass  vlan  10（允许管理 VLAN 10 通过，使得 AC 与 AP 能够通信）<br></code></pre></td></tr></table></figure></li><li>进入 LSW 与 AC 互联的接口，反向也需要放行 VLAN 10<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface G0/0/X<br>port link-type  trunk<br>port trunk allow-pass  vlan  10（允许管理 VLAN 10 通过，使得 AC 与 AP 能够通信）<br></code></pre></td></tr></table></figure></li></ol><ul><li>测试：使用 AP ping AC，或 AC ping AP 能通信即可，如果无法通信，检测接口的 VLAN 是否放行</li></ul><h3 id="4-AC-设备设置-CAPWAP-的隧道源-IP-地址（或者接口）用于-AC-与-AP-之间通信"><a href="#4-AC-设备设置-CAPWAP-的隧道源-IP-地址（或者接口）用于-AC-与-AP-之间通信" class="headerlink" title="4. AC 设备设置 CAPWAP 的隧道源 IP 地址（或者接口）用于 AC 与 AP 之间通信"></a>4. AC 设备设置 CAPWAP 的隧道源 IP 地址（或者接口）用于 AC 与 AP 之间通信</h3><h4 id="配置命令：（AC）-1"><a href="#配置命令：（AC）-1" class="headerlink" title="配置命令：（AC）"></a>配置命令：（AC）</h4><p>1. </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">capwap source ip-address 192.168.10.100（指定 AC 与 AP 能够互通的 IP 地址）<br></code></pre></td></tr></table></figure><ol start="5"><li>AP 上线（AC 需要对 AP 的身份做认证，默认为：MAC 认证）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">wlan// 进入 WLAN 视图<br>ap-id 1 ap-mac  XXXX-XXXX-XXXX// 把 AP 的 MAC 地址绑定到 AP-ID 1 中<br></code></pre></td></tr></table></figure></li></ol><ul><li>查看 AP 是否上线，AC 上 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">display  ap   all// 状态为 nor（代表上线成功）<br></code></pre></td></tr></table></figure></li></ul><h2 id="2-AC-可以通过-VAP-的配置，向-AP-下发配置命令和控制信息"><a href="#2-AC-可以通过-VAP-的配置，向-AP-下发配置命令和控制信息" class="headerlink" title="2. AC 可以通过 VAP 的配置，向 AP 下发配置命令和控制信息"></a>2. AC 可以通过 VAP 的配置，向 AP 下发配置命令和控制信息</h2><h3 id="AC-下发配置信息"><a href="#AC-下发配置信息" class="headerlink" title="AC 下发配置信息"></a>AC 下发配置信息</h3><ol><li>进入 WLAN 配置（服务集、安全、VAP 模板）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">wlan<br>ssid-profile  name A// 进入 WLAN 视图，创建 SSID 模板（A）<br>ssid  Offiec// 设置服务集名称（Offiec）<br></code></pre></td></tr></table></figure></li><li>设置安全模板<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">security-profile name A// 创建安全模板，名称：A<br>security wpa2 psk pass-phrase 12345678 aes// 密码为：12345678 使用 wpa2 认证，aes 加密<br></code></pre></td></tr></table></figure></li><li>绑定模板到 VAP 中<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">vap-profile name A// 创建 VAP 模板，名称 A<br>service-vlan vlan-id 20// 指定服务 VLAN（与管理 VLAN 隔离，默认使用管理 VLAN 分配 IP 地址）<br>ssid-profile A// 把 Office 和密码 12345678 绑定在 VAP A 中<br>security-profile A<br></code></pre></td></tr></table></figure></li><li>调用 VAP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">ap-id  1// 进入 AP 1 设备<br>vap-profile  A wlan  1 radio 0// 调用 VAP A，使用 WLAN ID=1，频道为：2.4GHZ（1和2都为 5GHZ）<br></code></pre></td></tr></table></figure></li></ol><ul><li>如果出现信号圈，代表配置完成，否则查看以上配置是否缺漏，或者存在错误</li></ul><h1 id="三层组网（AC-与-AP-处于不同网段，中大型的组网配置）"><a href="#三层组网（AC-与-AP-处于不同网段，中大型的组网配置）" class="headerlink" title="三层组网（AC 与 AP 处于不同网段，中大型的组网配置）"></a>三层组网（AC 与 AP 处于不同网段，中大型的组网配置）</h1><h2 id="1-交换设备创建-VLAN（分别为业务-VLAN、管理-VLAN）"><a href="#1-交换设备创建-VLAN（分别为业务-VLAN、管理-VLAN）" class="headerlink" title="1. 交换设备创建 VLAN（分别为业务 VLAN、管理 VLAN）"></a>1. 交换设备创建 VLAN（分别为业务 VLAN、管理 VLAN）</h2><p> 管理 VLAN：200（给 AP 分配 IP 地址）</p><ol><li>业务 VLAN：10、20、30（给终端用户分配 IP 地址）<br> 配置命令：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">vlan  batch   10   20   30    200// 创建管理 VLAN 和相关的业务 VLAN<br></code></pre></td></tr></table></figure></li><li>配置地址池<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">vlan pool vlan10<br>network  192.168.10.0  mask  24<br>gateway-list 192.168.10.254<br><br>vlan pool vlan20<br>network  192.168.20.0  mask  24<br>gateway-list 192.168.20.254<br><br>vlan pool vlan30<br>network  192.168.30.0  mask  24// 分别创建 3 个业务地址池<br>gateway-list 192.168.30.254// 指定网关地址<br><br>vlan pool vlan200<br>network  200.1.1.0  mask  24// 创建业务地址池<br>gateway-list  200.1.1.254// 指定网关地址<br>option 43 sub-option 1 ip-address 100.1.1.1// 配置选项字段 43（指定 AC 设备的 IP 地址，通过单播方式访问）<br>    默认采用广播，但不同 VLAN 的设备无法广播互访，所以需要手工指定 AC 的 IP 地址<br></code></pre></td></tr></table></figure></li></ol><p>交换设备需要配置三层网关接口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface vlanif10<br>ip address 192.168.10.254  24<br>dhcp select global// 创建三层接口，调用全局地址池<br><br>interface vlanif20<br>ip address 192.168.20.254  24<br>dhcp select global<br><br>interface vlanif30<br>ip address 192.168.30.254  24<br>dhcp select global<br><br>interface vlanif200<br>ip address 200.1.1.254  24<br>dhcp select global<br></code></pre></td></tr></table></figure><h2 id="2-交换设备的接口需要放行-VLAN"><a href="#2-交换设备的接口需要放行-VLAN" class="headerlink" title="2. 交换设备的接口需要放行 VLAN"></a>2. 交换设备的接口需要放行 VLAN</h2><ol><li>进入 LSW 与 AP 互联的接口<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface G0/0/X<br>port link-type trunk<br>port trunk  allow-pass   vlan   10  20  30  200// 配置为 Trunk 接口，并放行相关的管理 VLAN 和业务 VLAN <br>port trunk pvid  vlan  200// 配置 PVID 使得 AP 能够通过 VLANIF 200 获取 IP 地址<br></code></pre></td></tr></table></figure>AP 设备上使用<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">display  ip  interface  brief   // 查看 AP 设备是否获取到 IP 地址即可<br></code></pre></td></tr></table></figure></li></ol><h2 id="3-AC-与-AP-可以实现互通"><a href="#3-AC-与-AP-可以实现互通" class="headerlink" title="3. AC 与 AP 可以实现互通"></a>3. AC 与 AP 可以实现互通</h2><ol><li>AC 设备上配置 IP 地址<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">vlan 100<br>interface  Vlanif100<br>ip address  100.1.1.1  24// 设置 AC 的通信地址<br></code></pre></td></tr></table></figure></li><li>AC 接口需要放行 VLAN<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface G0/0/X// 进入 AC 与交换机互联的接口<br>port link-type trunk<br>port trunk allow-pass vlan 10 20 30 100// 需要放行业务 VLAN 和通信 VLAN<br>（业务 VLAN 提前放行，用于后续配置 VLAN POOL）<br></code></pre></td></tr></table></figure></li><li>交换设备与 AC 互联的接口也需要放行 VLAN，并且配置相同网段的地址<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">vlan 100<br>interface  Vlanif100<br>ip address  100.1.1.254  24// 设置交换设备与 AC 通信的地址<br></code></pre></td></tr></table></figure></li></ol><ul><li>接口需要放行 VLAN<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface G0/0/X// 进入 AC 与交换机互联的接口<br>port link-type trunk<br>port trunk allow-pass vlan 10 20 30 100// 需要放行业务 VLAN 和通信 VLAN<br></code></pre></td></tr></table></figure></li></ul><ol start="4"><li>AC 需要配置路由条目访问 AP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">ip route-static  200.1.1.0  24  100.1.1.254// 访问 AP，下一跳指定为：LSW 的接口 IP 地址<br></code></pre></td></tr></table></figure>配置完成后，可以在 AP 或者 AC 上 ping 对方进行测试</li></ol><h2 id="4-AP-注册上线"><a href="#4-AP-注册上线" class="headerlink" title="4. AP 注册上线"></a>4. AP 注册上线</h2><ol><li>AC 设备上，需要指定 CAPWAP 隧道源的 IP 地址<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">capwap source ip-address 100.1.1.1<br></code></pre></td></tr></table></figure></li><li>AC 设备还需要根据 AP 的 MAC 来进行注册（AC 配置）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">wlan// 进入 WLAN 视图<br>ap-id 1 ap-mac  XXXX-XXXX-XXXX// 把 AP 的 MAC 地址绑定到 AP-ID 中<br>```（进入 AP  使用：display  interface  vlanif 可以获取 AP 的 MAC 地址）<br></code></pre></td></tr></table></figure>配置完成后，在 AC 上使用<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">display  ap  all// AP 的状态为 nor 代表上线成功<br></code></pre></td></tr></table></figure></li></ol><h2 id="5-配置-AC-的业务"><a href="#5-配置-AC-的业务" class="headerlink" title="5. 配置 AC 的业务"></a>5. 配置 AC 的业务</h2><ol><li>AC 设备需要把服务 VLAN 划入到 VLAN POOL 中<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">vlan batch  10 20 30// 创建 VLAN（10、20、30）业务 VLAN<br>vlan pool  A// 创建 VLAN 池，名称：A<br>vlan  10  20  30// VLAN 池包含的服务 VLAN 有（10、20、30）<br></code></pre></td></tr></table></figure></li><li>进入 WLAN 视图，创建三个模板（SSID、安全、VAP）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">ssid-profile name A// 创建 SSID 模板<br>ssid  office// 设置 SSID 名称（wifi 信号覆盖范围标识）office<br>（quit 返回 WLAN 视图，创建下一个模板）<br><br>security-profile name A// 设置安全模板，名称：A<br>security wpa2 psk pass-phrase 12345678 aes// 设置 WPA2 认证，AES 加密的密码，密码：12345678<br>（quit 返回 WLAN 视图，创建下一个模板）<br><br>vap-profile name A// 创建 VAP 模板，名称：A<br>service-vlan vlan-pool A// 使用服务 VLAN POOL A（10、20、30）<br>ssid-profile A// 使用的 SSID 名称：office<br>security-profile A// 使用密码：12345678<br></code></pre></td></tr></table></figure></li><li>返回 WLAN 视图，绑定 VAP 到 AP 设备上<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">ap-id 1<br>vap-profile  A wlan  1  radio 0// 进入 AP-ID 1，调用 VAP 模板：A，使用 wlan 编号 1（radio 0 代表  2.4GHz）<br>（1 和 2 则为 5GHz）<br></code></pre></td></tr></table></figure>如果出现相关的信号圈，则代表配置成功</li></ol><h2 id="6-如果需要配置漫游，则额外添加一个-AP-设备，并参考一下配置"><a href="#6-如果需要配置漫游，则额外添加一个-AP-设备，并参考一下配置" class="headerlink" title="6. 如果需要配置漫游，则额外添加一个 AP 设备，并参考一下配置"></a>6. 如果需要配置漫游，则额外添加一个 AP 设备，并参考一下配置</h2><p>交换设备与新的 AP 互联接口，需要放行 VLAN</p><ol><li>进入 LSW 与 AP 互联的接口<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface G0/0/X<br>port link-type trunk<br>port trunk  allow-pass   vlan   10  20  30  200// 配置为 Trunk 接口，并放行相关的管理 VLAN 和业务 VLAN <br>port trunk pvid  vlan  200// 配置 PVID 使得 AP 能够通过 VLANIF 200 获取 IP 地址<br></code></pre></td></tr></table></figure></li><li>AC 上配置（AP 上线）<br>AP 上线（AC 需要对 AP 的身份做认证，默认为：MAC 认证）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">wlan// 进入 WLAN 视图<br>ap-id 2 ap-mac  XXXX-XXXX-XXXX// 把 AP 的 MAC 地址绑定到 AP-ID 2 中（更换 AP ID 为 2）<br>MAC 地址为新接入 AP 的 MAC<br>查看 AP 是否上线，AC 上 display  ap   all// 状态为 nor（代表上线成功）<br></code></pre></td></tr></table></figure></li><li>新 AP 调用相同的模板<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">ap-id 2<br>vap-profile  A wlan  2  radio 0// 进入 AP-ID 2，调用 VAP 模板：A，使用 wlan 编号 2（radio 0 代表  2.4GHz）（1 和 2 则为 5GHz）<br></code></pre></td></tr></table></figure>出现信号圈代表上线成功和配置成功<br>测试漫游  STA 接入 AP 后，</li></ol><pre><code>ping 网关 -t// ping 地址 -t  会一直进行访问，访问时，把 STA 在不同的 AP 覆盖范围内移动，查看数据是否中断```（一般 1-2 个数据包，或不中断代表漫游成功）</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;组网概念&quot;&gt;&lt;a href=&quot;#组网概念&quot; class=&quot;headerlink&quot; title=&quot;组网概念&quot;&gt;&lt;/a&gt;组网概念&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;二层组网：&lt;br&gt;AP 与 AC 处于相同的广播域中，可以通过二层广播的方式进行连接（一般相同 VLAN </summary>
      
    
    
    
    <category term="技术记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="路由交换基础" scheme="http://example.com/tags/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>13.网路服务</title>
    <link href="http://example.com/2023/11/13/14.%E7%BD%91%E8%B7%AF%E6%9C%8D%E5%8A%A1/"/>
    <id>http://example.com/2023/11/13/14.%E7%BD%91%E8%B7%AF%E6%9C%8D%E5%8A%A1/</id>
    <published>2023-11-13T07:00:10.000Z</published>
    <updated>2023-11-24T08:34:31.808Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网络应用服务"><a href="#网络应用服务" class="headerlink" title="网络应用服务"></a>网络应用服务</h1><ol><li>文件传输协议（FTP）</li></ol><ul><li><p>用于设备间传递文件信息（配置文件、补丁、文字信息和图片信息等）<br>（用于网络设备中，传递配置文件和补丁，更新包等）</p></li><li><p>使用 TCP 来作为底层的传输协议（稳定，可靠）</p><ol><li>21 号端口：用于建立控制会话（传递用户信息，检测 FTP 服务状态等）</li><li>20 号端口：用于传递用户数据信息（文件）</li></ol></li><li><p>工作模式</p><ol><li>主动模式：是由客户端提供数据传输端口</li><li>被动模式：是由服务器提供数据传输端口</li></ol></li></ul><h2 id="配置命令："><a href="#配置命令：" class="headerlink" title="配置命令："></a>配置命令：</h2><h3 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h3><ol><li>开启 FTP 服务<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">ftp server enable<br></code></pre></td></tr></table></figure></li><li>修改控制会话建立端口（如果需要隐藏端口，可以手工配置新的指定端口）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">ftp server port 1030（模拟器不支持。模拟器用默认端口登录即可）<br></code></pre></td></tr></table></figure></li><li>进入 AAA 视图，创建用户和指定用户的访问权限<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">aaa<br>local-user huawei password cipher Huawei@123// 创建本地用户，配置密码（用户名：huawei，密码：Huawei@123）<br> local-user huawei privilege level 15// 指定用户 huawei 的等级，为：15（默认：0）数值越多权限越多<br>（FTP 服务的等级必须大于等于 3）<br> local-user huawei ftp-directory flash:/// 指定用户能够通过 FTP 访问的存储路径<br> local-user huawei service-type ftp// 指定用户用于 FTP 服务<br></code></pre></td></tr></table></figure></li></ol><h3 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h3><p>（在用户视图发起登录即可）<br>ftp  X.X.X.X （服务器 IP 地址）<br>需要输入用户名和密码（密码是隐式的，不会出现在文本框）</p><p>用户登录后的基本操作命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">ls// 查看当前目录<br>get// 下载文件（AR1 设备 get ar2.cfg 下载 AR2 设备的配置文件）<br>put// 上传文件（AR1 设备 put ar1.cfg 把自己的配置文件传递给 AR2）<br></code></pre></td></tr></table></figure><hr><h1 id="远程登录"><a href="#远程登录" class="headerlink" title="远程登录"></a>远程登录</h1><ol><li><p>console：一般用于设备的开局（设备刚开始的时候没有配置接口 IP 地址和其他信息时，可以使用 console）<br> console 无需接口网络能够通信也能进行登录<br> 因为受到 console 线的传输距离影响，一般开局后都会采用其他方式登录，如：telnet、ssh）</p></li><li><p>Telnet：使用 23 号端口进行登录的协议（TCP 来传递）<br> 可以实现用户的远程登录，前提是设备必须可达（IP 地址可达）</p><ol><li>password：只需要配置密码就能完成登录，所有的用户都用相同的密码和相同的用户权限<br> （如果存在多个用户时，无法区分权限）</li><li>aaa：可以利用 AAA 来独立创建账户和密码，每个用户都能单独指定权级<br> （AAA 也可以设置全局等级和用户等级，用户等级会由于全局等级）</li></ol></li></ol><h2 id="配置命令：-1"><a href="#配置命令：-1" class="headerlink" title="配置命令："></a>配置命令：</h2><h3 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h3><ol><li>开启 Telnet 服务 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">telnet server  enable（ENSP 默认已经开启，如果没有开启则需要配置该命令）<br></code></pre></td></tr></table></figure></li><li>修改 Telnet 端口号 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">telnet server port 3000// 例如修改为 3000（默认：23 号端口）用于隐藏端口号<br></code></pre></td></tr></table></figure></li><li>进入用户接口 VTY 0 4 通道 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">user-interface vty  0 4<br>authentication-mode aaa // 把认证模式修改为：AAA<br>user  privilege  level 1// 把用户等级修改为 1（默认：0）所有的用户登录后都采用等级 1<br>（如果 AAA 下有指定等级，则 AA 优先）<br></code></pre></td></tr></table></figure></li><li>创建用户<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">aaa<br>local-user huawei password cipher Huawei@123// 创建本地用户，配置密码（用户名：huawei，密码：Huawei@123）<br>local-user huawei privilege level 15// 指定用户 huawei 的等级，为：15（默认：0）数值越多权限越多<br>（Telnet 如果希望用户能够进行配置，则等级 3 及以上）<br><br>local-user huawei service-type telnet// 指定用户用于 Telnet 服务<br></code></pre></td></tr></table></figure></li></ol><h3 id="客户端配置-1"><a href="#客户端配置-1" class="headerlink" title="客户端配置"></a>客户端配置</h3><p>在用户视图 telnet X.X.X.X + 端口号即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">telnet 10.1.12.2  3000// 如果没有修改端口号，则无需添加 3000<br></code></pre></td></tr></table></figure><hr><h1 id="DHCP"><a href="#DHCP" class="headerlink" title="DHCP"></a>DHCP</h1><p>相比于手工方式配置 IP 地址</p><ol><li>减少管理员的配置压力，可以集中管理</li><li>移动性好，设备迁移可以自动获取新的 IP 地址信息</li><li>可以提高地址的利用（200 个用户，但只有 150 个地址）服务器可以根据地址的在线情况自动收发和分配</li><li>减少用户配置导致 IP 地址冲突问题</li></ol><h3 id="配置命令：-2"><a href="#配置命令：-2" class="headerlink" title="配置命令："></a>配置命令：</h3><h4 id="全局地址池配置"><a href="#全局地址池配置" class="headerlink" title="全局地址池配置"></a>全局地址池配置</h4><p>例如与 VRRP 绑定的场景可以使用全局地址池</p><ol><li>开启 DHCP 服务<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">dhcp enable <br></code></pre></td></tr></table></figure></li><li>创建地址池<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">ip pool A// 创建 DHCP 地址池，名称：A<br>network 192.168.1.0 mask 24 // 地址池范围：192.168.1.0/24<br>（地址池为：192.168.1.1—254）<br><br>gateway-list 192.168.1.254// 配置地址池分配的网关（地址池范围：192.168.1.1—253）<br></code></pre></td></tr></table></figure></li></ol><ul><li>（可选配置） <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs plaintext"> static-bind ip-address 192.168.1.100 mac-address 5489-9875-0e64 // 绑定 IP 地址<br>例如：管理员设备需要固定获取 IP ，可以手工把管理员设备的 MAC 地址绑定<br>如：PC1 固定获取 IP 地址为：192.168.1.100，MAC 地址为 PC1 设备地址<br><br>excluded-ip-address 192.168.1.201 192.168.1.253 // 如果公司存在服务设备（如：打印机和服务器等）<br>为了避免地址被占用无法为这些设备分配 IP 可以把 IP 地址排除<br>排除后的地址不会被分配给终端设备，可以手工分配给需要使用的设备<br>lease day 0 hour 12 minute 0 // 设置地址分配的使用时常（12 小时，默认：1 天）<br>dns-list 114.114.114.114 // 配置 DNS 服务器地址<br></code></pre></td></tr></table></figure></li></ul><ol start="3"><li>调用地址池<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface G0/0/1<br>ip address 192.168.1.254  24<br>dhcp select  global// 调用全局地址池<br></code></pre></td></tr></table></figure></li></ol><hr><h4 id="接口地址池配置"><a href="#接口地址池配置" class="headerlink" title="接口地址池配置"></a>接口地址池配置</h4><ol><li>开启 DHCP 服务<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">dhcp enable <br></code></pre></td></tr></table></figure></li><li>配置接口地址池<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface G0/0/1<br>ip address 192.168.1.254  24// 进入接口配置 IP 地址<br>该地址为接口地址池的网关：192.168.1.254<br>同时也是地址池范围：192.168.1.0 — 254（可用地址为：192.168.1.1—253）<br><br>dhcp select  interface// 开启 DHCP 接口地址池服务<br></code></pre></td></tr></table></figure></li><li>可选配置<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">dhc server static-bind ip-address 192.168.1.100 mac-address 5489-9875-0e64 // 绑定 IP 地址<br>例如：管理员设备需要固定获取 IP ，可以手工把管理员设备的 MAC 地址绑定<br>如：PC1 固定获取 IP 地址为：192.168.1.100，MAC 地址为 PC1 设备地址<br><br>dhc server excluded-ip-address 192.168.1.201 192.168.1.253 // 如果公司存在服务设备（如：打印机和服务器等）<br>为了避免地址被占用无法为这些设备分配 IP 可以把 IP 地址排除<br>排除后的地址不会被分配给终端设备，可以手工分配给需要使用的设备<br>dhc server lease day 0 hour 12 minute 0 // 设置地址分配的使用时常（12 小时，默认：1 天）<br>dhc server dns-list 114.114.114.114 // 配置 DNS 服务器地址<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网络应用服务&quot;&gt;&lt;a href=&quot;#网络应用服务&quot; class=&quot;headerlink&quot; title=&quot;网络应用服务&quot;&gt;&lt;/a&gt;网络应用服务&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;文件传输协议（FTP）&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;用于设备间传递文件信息（配</summary>
      
    
    
    
    <category term="技术记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="路由交换基础" scheme="http://example.com/tags/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>12.链路聚合</title>
    <link href="http://example.com/2023/11/12/13.%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/"/>
    <id>http://example.com/2023/11/12/13.%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/</id>
    <published>2023-11-12T07:00:10.000Z</published>
    <updated>2023-11-24T07:20:07.507Z</updated>
    
    <content type="html"><![CDATA[<h1 id="链路聚合"><a href="#链路聚合" class="headerlink" title="链路聚合"></a>链路聚合</h1><ul><li><p>交换设备或路由设备之间的中转带宽不足，会导致延迟、抖动、丢包率增加</p></li><li><p>需要添加冗余的链路（多条物理链路，增加带宽）</p></li><li><p>交换设备增加多条冗余的物理链路会导致环路的产生，所以需要运行生成树（运行生成树会导致端口被阻塞，无法增加带宽）</p></li><li><p>使用链路聚合即可增加带宽，又能防止设备间的冗余链路带来的环路问题<br>  （增加带宽、增强可靠性、可以实现链路的负载均衡）</p></li><li><p>可以在不升级物理设备和接口的情况下，把多个物理接口聚合成一个逻辑接口，从而增加带宽</p></li><li><p>链路聚合最大支持 8 条物理链路同时聚合，聚合的成员接口必须满足以下条件</p><ol><li>接口类型   </li><li>带宽  </li><li>双工模式  </li><li>成员接口数量</li></ol></li></ul><h2 id="1-手工模式"><a href="#1-手工模式" class="headerlink" title="1. 手工模式"></a>1. 手工模式</h2><p>手工模式无法通过报文感知邻居的状态，对端成员端口故障也无法感知<br>只适合不支持 LACP 的低端、老旧的设备使用</p><h2 id="2-LACP-模式"><a href="#2-LACP-模式" class="headerlink" title="2. LACP 模式"></a>2. LACP 模式</h2><p>LACP 可以通过周期性的报文，感知邻居状态，同时可以选举主备转发的链路</p><p>补充：聚合后的端口（成员端口会失去原有的特性）后续的链路类型均以 Eth-trunk 属性为主</p><h1 id="配置命令："><a href="#配置命令：" class="headerlink" title="配置命令："></a>配置命令：</h1><ol><li>创建链路聚合端口<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface Eth-Trunk 1<br></code></pre></td></tr></table></figure></li><li>修改类型<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">mode lacp-static // 把链路聚合修改为 LACP 静态模式<br>（如果加入了成员接口，则无法再重新修改模式，需要先把成员接口退出）<br></code></pre></td></tr></table></figure></li><li>加入成员链路<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">trunkport GigabitEthernet 0/0/10 to 0/0/11// 把 G0/0/10 和 G0/0/11 加入到聚合链路中（端口类型需要明细配置）<br></code></pre></td></tr></table></figure></li></ol><h2 id="可选配置"><a href="#可选配置" class="headerlink" title="可选配置"></a>可选配置</h2><ol start="4"><li><p>设置 LACP 优先级（系统视图）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">lacp priority 100// 设置 LACP 系统优先级，越小越优（0—65535）默认：32768<br></code></pre></td></tr></table></figure><p>其余配置均在主控端完成（主控端优先级越小，越容易成为主控设备）<br>interface  Eth-trunk 接口中配置</p></li><li><p>设置最大活跃链路数量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">max active-linknumber 2// 例如：成员链路有 3 条，可以设置最大的活跃链路为 2（其中一条为备份链路）<br></code></pre></td></tr></table></figure></li><li><p>设置回切链路和时间</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs plaintext"> lacp preempt enable// 当主链路故障，备份链路会立刻进行切换<br> lacp preempt delay 10// 主链路从故障恢复后，需要配置回切（否则不会把新的主接口抢占）<br>设置回切时间为 10s<br>interface 成员接口中配置<br></code></pre></td></tr></table></figure></li><li><p>设置成员接口的优先级</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface G0/0/X<br>lacp priority 100// 默认最大 8 条链路转发，如果设置了 max active 链路<br>则可以设置备份链路，链路也会根据优先级进行选举<br>优先级小的为主链路，优先级一样则比较端口 ID（越小越好）<br>默认接口优先级为：32768，取值范围：0—65535<br></code></pre></td></tr></table></figure></li><li><p>​查看配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">display  eth-trunk // 查看链路聚合接口的状态、成员信息等<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;链路聚合&quot;&gt;&lt;a href=&quot;#链路聚合&quot; class=&quot;headerlink&quot; title=&quot;链路聚合&quot;&gt;&lt;/a&gt;链路聚合&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;交换设备或路由设备之间的中转带宽不足，会导致延迟、抖动、丢包率增加&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;需要</summary>
      
    
    
    
    <category term="技术记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="路由交换基础" scheme="http://example.com/tags/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>11.VLAN间路由</title>
    <link href="http://example.com/2023/11/11/12.VLAN%E9%97%B4%E8%B7%AF%E7%94%B1/"/>
    <id>http://example.com/2023/11/11/12.VLAN%E9%97%B4%E8%B7%AF%E7%94%B1/</id>
    <published>2023-11-11T07:00:10.000Z</published>
    <updated>2023-11-24T07:20:18.115Z</updated>
    
    <content type="html"><![CDATA[<h1 id="VLAN-间路由"><a href="#VLAN-间路由" class="headerlink" title="VLAN 间路由"></a>VLAN 间路由</h1><ol><li><p>相同 VLAN，相同网段的设备互访，一般不需要经过网关设备<br> 因为 ARP 能够直接泛洪给目的设备（交换设备可以根据记录的 MAC 地址实现互访）</p></li><li><p>不同 VLAN，不同网段的设备互访，设备需要先寻找网关<br> （因为 ARP 广播无法跨越广播域发送给目的设备。需要先寻找目的路由的下一跳“网关接口”）<br> 数据均需要通过网关实现转换，转换时源和目的 MAC 地址会不断改变，并且二层头部也会重新封装（重新封装会把 VLAN ID 也清空）</p><p> 二层隔离，三层互访，实现不同 VLAN 间的设备访问</p></li></ol><h1 id="单臂路由"><a href="#单臂路由" class="headerlink" title="单臂路由"></a>单臂路由</h1><p> 路由器一般用于路由学习，转发能力相较于交换设备要弱（相对的端口数量也比较少）<br>可以把路由器的物理接口通过逻辑的方式划分为多个子接口使用，每一个子接口都相当于一个独立的三层接口</p><p>路由器的子接口可以剥离标签，可以配置 dot1q 来终结 VLAN ID 封装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface GigabitEthernet0/0/0.1// 创建子接口，在 G0/0/0 物理接口中，逻辑创建 0.1 接口<br><br>dot1q termination vid 10// 让子接口识别标签，并且可以剥离标签和封装标签（VLAN 10）<br><br>ip address 192.168.1.254   24// 该接口是 VLAN 10 的主机网关，配置网关地址<br><br>arp broadcast enable// 子接口默认不处理 ARP 广播报文，需要开启 ARP 广播功能<br></code></pre></td></tr></table></figure><p><strong>补充：单臂路由一般用于交换设备为二层交换机（不支持三层功能的交换设备使用）</strong></p><h1 id="VLANIF-接口"><a href="#VLANIF-接口" class="headerlink" title="VLANIF 接口"></a>VLANIF 接口</h1><ul><li><p>三层交换设备可以配置 VLANIF 逻辑接口，该接口可以充当 VLAN 的网关<br>  例如：VLANIF 10，所有的 VLAN 10 接口都可以实现访问</p></li><li><p>VLANIF 还能实现交换设备的一次路由多次交换功能，不同网段的设备在三层交换机上，第一次 ARP 的学习需要查找路由表，后续的转发则根据二层表项完成（加快设备转发）</p></li><li><p><strong>补充：设备会根据掩码来判断源和目的地址是否同一个网段，如果相同网段则直接请求对方的 MAC，如果不同网段则先寻找网关 MAC</strong><br>  如果 PC 设备相同网段，但处于不同的广播域中，则可以开启 ARP 代理功能，实现互访</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface  G0/0/0路由式的 ARP<br>arp-proxy  enable// 在网关接口中开启 ARP 代理即可，网关可以欺骗主机，MAC 地址为自己<br></code></pre></td></tr></table></figure></li></ul><h1 id="VLAN-间的-ARP-代理"><a href="#VLAN-间的-ARP-代理" class="headerlink" title="VLAN 间的 ARP 代理"></a>VLAN 间的 ARP 代理</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">arp-proxy inter-sub-vlan-proxy enable   // 实现不同 VLAN，相同网段的 PC 互访，由 VLANIF 网关完成欺骗<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;VLAN-间路由&quot;&gt;&lt;a href=&quot;#VLAN-间路由&quot; class=&quot;headerlink&quot; title=&quot;VLAN 间路由&quot;&gt;&lt;/a&gt;VLAN 间路由&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;相同 VLAN，相同网段的设备互访，一般不需要经过网关设备&lt;br&gt; 因为 </summary>
      
    
    
    
    <category term="技术记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="路由交换基础" scheme="http://example.com/tags/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>10.MSTP+VRRP配置命令参考</title>
    <link href="http://example.com/2023/11/10/11.MSTP+VRRP%E9%85%8D%E7%BD%AE%E5%91%BD%E4%BB%A4%E5%8F%82%E8%80%83/"/>
    <id>http://example.com/2023/11/10/11.MSTP+VRRP%E9%85%8D%E7%BD%AE%E5%91%BD%E4%BB%A4%E5%8F%82%E8%80%83/</id>
    <published>2023-11-10T07:00:10.000Z</published>
    <updated>2023-11-24T07:20:26.609Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-创建-VLAN"><a href="#1-创建-VLAN" class="headerlink" title="1. 创建 VLAN"></a>1. 创建 VLAN</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">vlan batch 10 20// 创建相关 VLAN 10 和 20<br></code></pre></td></tr></table></figure><h1 id="2-所有交换机互联接口配置为-Trunk-并放行-VLAN-10-和-20"><a href="#2-所有交换机互联接口配置为-Trunk-并放行-VLAN-10-和-20" class="headerlink" title="2. 所有交换机互联接口配置为 Trunk 并放行 VLAN 10 和 20"></a>2. 所有交换机互联接口配置为 Trunk 并放行 VLAN 10 和 20</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface G0/0/X<br>port link-type trunk<br>port trunk  allow-pass  vlan 10 20<br></code></pre></td></tr></table></figure><h1 id="3-所有的交换机配置相同的实例信息"><a href="#3-所有的交换机配置相同的实例信息" class="headerlink" title="3. 所有的交换机配置相同的实例信息"></a>3. 所有的交换机配置相同的实例信息</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">stp region-configuration// 进入 STP 域配置<br>region-name Huawei// 配置域名<br>revision-level 10// 配置修订等级<br>instance 1 vlan 10// 配置实例<br>instance 2 vlan 20<br>active region-configuration// 最后配置，使以上命令生效<br>（域名、等级及实例必须相同，否则会划分不同的 MST 域）<br></code></pre></td></tr></table></figure><h1 id="4-配置实例根桥"><a href="#4-配置实例根桥" class="headerlink" title="4. 配置实例根桥"></a>4. 配置实例根桥</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">stp instance 1 root primary // 指定某设备为实例 1 的根桥<br>stp instance 1 root  secondary // 指定某设备为实例 1 的备份根桥<br><br>（实例 ID 根据不同的设备需求来进行配置，以上命令仅作为参考）<br></code></pre></td></tr></table></figure><h1 id="5-进入-VLANIF-接口，配置网关地址"><a href="#5-进入-VLANIF-接口，配置网关地址" class="headerlink" title="5. 进入 VLANIF 接口，配置网关地址"></a>5. 进入 VLANIF 接口，配置网关地址</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface Vlanif10// 例如：进入 VLANIF 10<br>ip address 10.1.1.100 24// 配置接口 IP 地址（与虚拟地址一个网段，但不能是虚拟网关地址）<br>vrrp vrid 1 virtual-ip 10.1.1.254// 设置网关地址<br>vrrp vrid 1 priority 200// 设置优先级（默认：100 越大越优）<br></code></pre></td></tr></table></figure><h1 id="查看-MSTP-接口信息"><a href="#查看-MSTP-接口信息" class="headerlink" title="查看 MSTP 接口信息"></a>查看 MSTP 接口信息</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">display  stp  brief<br></code></pre></td></tr></table></figure><h1 id="查看-VRRP-设备信息"><a href="#查看-VRRP-设备信息" class="headerlink" title="查看 VRRP 设备信息"></a>查看 VRRP 设备信息</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">display  vrrp  brief<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-创建-VLAN&quot;&gt;&lt;a href=&quot;#1-创建-VLAN&quot; class=&quot;headerlink&quot; title=&quot;1. 创建 VLAN&quot;&gt;&lt;/a&gt;1. 创建 VLAN&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;</summary>
      
    
    
    
    <category term="技术记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="路由交换基础" scheme="http://example.com/tags/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>09.以太网交换基础</title>
    <link href="http://example.com/2023/11/09/10.%E4%BB%A5%E5%A4%AA%E7%BD%91%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2023/11/09/10.%E4%BB%A5%E5%A4%AA%E7%BD%91%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80/</id>
    <published>2023-11-09T07:00:10.000Z</published>
    <updated>2023-11-24T07:20:56.471Z</updated>
    
    <content type="html"><![CDATA[<h1 id="以太网"><a href="#以太网" class="headerlink" title="以太网"></a>以太网</h1><p>早期的以太网使用共享线缆（HUB）接入的设备会共享带宽，泛洪处理数据<br>会导致数据帧的冲突问题（冲突域） CSMA&#x2F;CD 可以缓解冲突的问题</p><ol><li>先听后发：先侦听链路是否空闲，空闲时发送数据（非冲突时发送）</li><li>边听边发：在发送的过程中也会持续监听链路，如果发现冲突则停止发送（冲突停发）</li><li>随机延迟后重发：监听链路冲突缓解或解决后重新再发送数据</li></ol><h1 id="以太网的数据帧类型"><a href="#以太网的数据帧类型" class="headerlink" title="以太网的数据帧类型"></a>以太网的数据帧类型</h1><ul><li><p>Ethernet II：<br>  主要用于承载用户数据，或者普通二层流量<br>  使用 Type 来标识上层协议（如：0x0800 &#x3D; IP、0x86DD &#x3D; IPv6 等）</p></li><li><p>802.3：<br>  主要用于承载控制协议流量（BPDU、IS-IS 格式帧等）<br>  使用 Length、LLC、SNAP 用于标识上层协议（一般使用 length 来标识）</p></li><li><p>MAC 地址（48 bit）<br>  是网卡的出厂地址，默认由厂商分配<br>  前 24 bit（OUI 指定，用于标识厂商）后 24 bit 由厂商分配，用于唯一标识一台设备</p></li></ul><h2 id="MAC-地址（帧类型）"><a href="#MAC-地址（帧类型）" class="headerlink" title="MAC 地址（帧类型）"></a>MAC 地址（帧类型）</h2><ol><li><p>单播：第 8 bit，固定为 0，偶数帧为单播数据帧<br>   例如：02-00-00-00-00-01 （02 代表是单播帧，也就是 XX-00-00-00-00-01，如果 XX 是偶数就是单播帧）</p></li><li><p>组播：第 8 bit，固定为 1，奇数帧为组播数据帧<br>   例如：01-00-5E-00-00-0A （01 代表是组播帧，也就是 XX-00-5E-00-00-0A，如果 XX 是奇数就是组播帧）</p></li><li><p>广播：所有 bit 位都等于 1，FF-FF-FF-FF-FF-FF 为广播帧</p></li></ol><h1 id="交换机对于不同的数据帧，处理方式"><a href="#交换机对于不同的数据帧，处理方式" class="headerlink" title="交换机对于不同的数据帧，处理方式"></a>交换机对于不同的数据帧，处理方式</h1><ul><li><p>学习功能：<br>  交换设备收到数据帧后，会根据数据帧的源 MAC 地址来进行记录<br>  记录 MAC 地址和接口的绑定关系（有相关记录的单播帧，称为已知单播，没有记录的称为，未知单播）</p></li><li><p>已知单播：<br>  从一个接口收到单播数据帧，会查看目的 MAC 地址表是否有对应关系，如果有，则从记录的接口发出<br>  （交换设备的转发行为）</p></li><li><p>未知单播：<br>  从一个接口收到单播数据帧，会查看目的 MAC 地址表是否有对应关系，如果没有，则从所有的其他接口发出<br>  （交换设备的泛洪处理）</p></li><li><p>组播：<br>  收到一个组播数据帧，会先上送 CPU 处理，查看本设备是否监听<br>  如果有监听，则从对应的接口转发<br>  如果没有监听，则直接泛洪处理</p></li><li><p>广播：<br>  收到一个广播数据帧，除了接收数据的接口，其余接口都做转发（泛洪）</p></li></ul><h1 id="冗余链路"><a href="#冗余链路" class="headerlink" title="冗余链路"></a>冗余链路</h1><p>冗余的交换链路会带来环路和广播风暴等问题，通过生成树解决</p><h2 id="端口角色"><a href="#端口角色" class="headerlink" title="端口角色"></a>端口角色</h2><p>RP：根端口，是非根交换机到达根桥最近的一个接口（一台非根交换机，有且只有 1 个）<br>DP：指定端口，每条链路都需要选举，最优的为指定端口（用于转发 BPDU 和用户数据）</p><h2 id="选举参数"><a href="#选举参数" class="headerlink" title="选举参数"></a>选举参数</h2><ol><li><p>Root ID：<br>优先级 + MAC 地址<br>优先级：16 bit &#x3D; 0 —— 65535，但是后 12 bit 固定为 0（4096）<br>优先级只能是 4096 的倍数，如：32768、0、4096、8192 等<br>（优先级默认：32768 越小越优）</p><p>如果优先级一致，则比较 MAC 地址（越小越优）</p></li><li><p>RPC：<br> 根路径开销，非根设备到达根桥的总开销，最小的会成为 RP 端口</p></li><li><p>BID：<br>发送者的桥 ID，哪一台设备发送，就会填充该设备的桥 ID 信息<br>优先级 + MAC 地址<br>优先级：16 bit &#x3D; 0 —— 65535，但是后 12 bit 固定为 0（4096）<br>优先级只能是 4096 的倍数，如：32768、0、4096、8192 等<br>（优先级默认：32768 越小越优）</p></li><li><p>PID：<br>优先级 + 端口 ID 组成<br>优先级默认：128 越小越好，一致则比较端口 ID，越小越好<br>例如：G0&#x2F;0&#x2F;1 接口， PID &#x3D; 128.1</p><ol><li><p>选举根桥：<br> 所有的交换设备都会认为自己是根桥，通过发送 BPDU 的报文进行选举<br> 比较参数 1 选举最优的设备成为根桥（有且只有一个）<br> 其余设备为非根交换机</p></li><li><p>非根交换机选举根端口：<br> 非根设备会比较本设备所有接口，哪一个到达根桥最近就会成为根端口<br> 比较参数 2 （数值最小的）</p></li><li><p>每段链路都需要选举 DP 端口<br> 先比较参数 1 和 2 如果无法选举，则比较3<br> 补充：双交换设备双链路相连，前 3 个选举参数一致，则会比较第 4 个参数 PID</p></li><li><p>阻塞端口：<br> 阻塞非 DP 和 RP 的端口，选出 AP 端口</p></li></ol></li></ol><h2 id="配置命令："><a href="#配置命令：" class="headerlink" title="配置命令："></a>配置命令：</h2><ol><li>修改设备的优先级<br>方法一<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">stp   priority  0// 把设备的优先级修改为 0<br></code></pre></td></tr></table></figure>方法二<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">stp   root   primary// 指定设备为根桥，相当于把优先级改为 0<br><br>stp  root   secondary // 指定设备为备份根桥，相当于把优先级改为 4096<br></code></pre></td></tr></table></figure></li><li>修改接口开销<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface  G0/0/X<br>stp  cost   100// G0/0/X 接口默认开销为 20000，修改为 100<br></code></pre></td></tr></table></figure></li><li>修改生成树类型<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">stp  mode  （stp、rstp、mstp）// 默认为：MSTP  可以修改为其他类型<br></code></pre></td></tr></table></figure></li><li>查看方式<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">display  stp  // 查看详细信息<br>display  stp  brief// 查看摘要信息<br></code></pre></td></tr></table></figure></li></ol><h1 id="STP-状态机"><a href="#STP-状态机" class="headerlink" title="STP 状态机"></a>STP 状态机</h1><ol><li><p>discarding：不转发用户数据，不学习 MAC 地址（可以转发 BPDU） 是 AP 端口的最终状态</p></li><li><p>learning：不转发用户数据，但是可以学习 MAC 地址，也可以转发 BPDU，是 DP 和 RP 的过渡状态</p></li><li><p>forwarding：既可以转发用户数据，又可以学习 MAC 地址和转发 BPDU，是 DP 和 RP 的最终状态</p><p> 每个状态切换都需要等待一个 forward delay（15s）<br> 从 discarding 到 forwarding 需要 2 个 forward delay（30s）</p><p> STP 的收敛速度非常慢，每次接口从 Down 到 Up 还需要等 30s 才能转发<br> 问题一：PC 设备接入后，DP 端口需要 30s 才能转发 PC 设备的流量</p><p> 问题二：当 RP 端口故障后，最优的 AP 会成为新的 RP 端口，但新 RP 端口到达转发状态需要 30s</p><p> 即：网络的变化或者端口抖动（频繁 up&#x2F;down）都会使得交换网络等待 30s 才能恢复。这是用户无法接受的</p><p> <strong>使用 RSTP 可以解决以上的问题</strong></p><ol><li><p>EP 端口（边缘端口）：<br> 用于连接终端设备（如：PC、服务器、IP 电话、打印机等）接口一旦 up 立刻进入 forwarding 状态<br> 无需等待 30s 的延迟</p></li><li><p>AP 端口是 RP 的备份，AP 在 RSTP 中为预备端口，一旦 RP 故障。最优的 AP 会立刻切换至 RP 并且进入 forwarding 状态<br> 无需等待 30s 的延迟（AP 在 RSTP 和 MSTP 中是 RP 的预备端口）</p></li></ol><ul><li><em>端口快速切换到 forwarding 会产生哪些问题？</em><br>  如果端口接入就能转发有可能会产生环路问题，所以设置边缘端口时，为了保护交换设备，需要设置 BPDU 保护功能</li></ul></li></ol><h2 id="配置命令：-1"><a href="#配置命令：-1" class="headerlink" title="配置命令："></a>配置命令：</h2><ol><li>配置端口为边缘端口<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface G0/0/X<br>stp edged-port enable// 用于用户终端，接入就能访问网络，避免 30s 的等待延迟<br>（如果边缘端口接入的是交换机，就会有环路的风险）<br></code></pre></td></tr></table></figure></li><li>配置边缘端口保护<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">stp bpdu-protection// 开启后，只对边缘端口生效<br>交换设备会发送 BPDU，一旦边缘端口收到 BPDU 就会主动关闭该接口（终端不会关闭）<br></code></pre></td></tr></table></figure></li><li>设置自动恢复<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">error-down  auto-recovery  cause  bpdu-protection  interval  30// 因为收到 BPDU 导致的端口 shutdown 可以在 30s 后自动恢复<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;以太网&quot;&gt;&lt;a href=&quot;#以太网&quot; class=&quot;headerlink&quot; title=&quot;以太网&quot;&gt;&lt;/a&gt;以太网&lt;/h1&gt;&lt;p&gt;早期的以太网使用共享线缆（HUB）接入的设备会共享带宽，泛洪处理数据&lt;br&gt;会导致数据帧的冲突问题（冲突域） CSMA&amp;#x2F;C</summary>
      
    
    
    
    <category term="技术记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="路由交换基础" scheme="http://example.com/tags/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>08.VLAN基础</title>
    <link href="http://example.com/2023/11/08/9.VLAN%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2023/11/08/9.VLAN%E5%9F%BA%E7%A1%80/</id>
    <published>2023-11-08T07:00:10.000Z</published>
    <updated>2023-11-24T08:32:47.929Z</updated>
    
    <content type="html"><![CDATA[<h1 id="VLAN"><a href="#VLAN" class="headerlink" title="VLAN"></a>VLAN</h1><p>作用：隔离广播域，实现二层的访问控制<br>    通过 VLAN ID 来区分数据来自于哪一个广播域</p><p>在原始的数据帧中添加（802.1Q）来进行标识<br>802.1Q 有 12 bit 的 VLAN ID（取值范围：0—4095，但是 0 和 4095 保留）</p><h2 id="VLAN-概念"><a href="#VLAN-概念" class="headerlink" title="VLAN 概念"></a>VLAN 概念</h2><h3 id="PVID（端口默认-VLAN-ID）"><a href="#PVID（端口默认-VLAN-ID）" class="headerlink" title="PVID（端口默认 VLAN ID）"></a>PVID（端口默认 VLAN ID）</h3><p>当交换设备收到一个不带标签的数据帧，就会根据 PVID 打上标签并接收<br>        X7 系列的交换设备，默认的 PVID &#x3D; 1</p><h3 id="端口类型"><a href="#端口类型" class="headerlink" title="端口类型"></a>端口类型</h3><h4 id="Access："><a href="#Access：" class="headerlink" title="Access："></a>Access：</h4><p>用于连接终端设备（PC、打印机、服务器等）“因为一般的终端设备都不能识别标签”<br>有且允许一个 VLAN 通，并且从该接口发出的数据帧都不带标签（剥离标签发送）</p><ul><li><p>收规则：收到一个带标签的数据帧，会查看标签与接口的 PVID 是否一致，如果一致则接收，否则丢弃<br>  收到一个不带标签的数据帧，会根据接口的 PVID 打上标签，并且接收</p></li><li><p>发规则：发送的数据帧标签必须与接口的 PVID 一致，否则不能发送<br>  （从该接口发出的数据帧都会剥离标签发送）</p></li></ul><h4 id="Trunk："><a href="#Trunk：" class="headerlink" title="Trunk："></a>Trunk：</h4><p>用于连接交换设备之间（干道链路）可以允许单个或多个 VLAN 通过<br>并且在通过该接口的时候保留 VLAN 标签</p><ul><li><p>收规则：收到一个带标签的数据帧，会查看接口的允许列表（allow-pass）是否有相关标签，如果有则接收，否则丢弃<br>  收到一个不带标签的数据帧，会根据接口的 PVID 打上标签，再查看接口允许列表是否存在相关标签，有则接收，否则丢弃</p></li><li><p>发规则：发送带标签的数据帧，会先查看接口的允许列表（allow-pass）列表中包含该 VLAN 则可以发出，否则拒绝发送<br>  对于可以发出的数据帧，会查看接口的 PVID 与标签是否一致，如果一致则剥离标签发送，否则保留标签发送</p></li></ul><h4 id="Hybrid："><a href="#Hybrid：" class="headerlink" title="Hybrid："></a>Hybrid：</h4><p>既可以连接终端又可以连接交换设备（是华为、华三特有的混合接口）<br>能够允许单个或多个 VLAN 同时通过。并且通过的时候能够选择是否携带标签</p><ul><li><p>收规则：收到一个带标签的数据帧，会查看接口的允许列表（tagged、untagged）如果列表中存在该标签，则可以接收，否则丢弃<br>  收到一个不带标签的数据帧，会根据接口的 PVID 打上标签，再查看允许列表（tagged、untagged）有则接收，否则丢弃</p></li><li><p>发规则：发送一个带标签的数据帧，会查看接口的允许列表是否包含该数据帧（tagged、untagged）如果有则允许发送，否则不发送<br>  对于能够发出的数据帧会查看相关的列表，存在于（tagged 列表）则保留标签发送<br>  存在于（untagged 列表）则剥离标签发送</p></li></ul><h1 id="配置命令："><a href="#配置命令：" class="headerlink" title="配置命令："></a>配置命令：</h1><ul><li>创建 VLAN（划分 VLAN 前必须创建相关 VLAN）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">vlan batch 10 20 30 100 to 200// 例如：同时创建 10、20、30 及 100 到 200 的 VLAN<br></code></pre></td></tr></table></figure></li><li>Access 接口配置<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface  G0/0/X// 进入连接终端设备的物理接口<br>port  link-type  access<br>port  default  vlan  10// 配置 Access 接口类型，PVID 修改为 10<br>（根据划分的 VLAN 配置 PVID 即可）<br></code></pre></td></tr></table></figure></li><li>Trunk 接口配置<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface  G0/0/X// 进入连接终端设备的物理接口<br>port  link-type  trunk// 把接口链路类型修改为 Trunk<br>port  trunk  allow-pass vlan  10 20 30// 例如：同时允许 VLAN 10、20、30 通过<br>port  trunk  pvid  vlan  10// 例如：把 Trunk 接口的 PVID 修改为 10（一般不需要修改，默认为 1）<br>（如：Trunk 接口连接 PC 或者 AP 等可以配置 PVID 使其剥离标签）<br></code></pre></td></tr></table></figure></li><li>Hybrid 接口配置<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface  G0/0/X// 进入连接终端设备的物理接口<br>port  link-type  hybrid// 把接口链路类型修改为 Hybrid（默认也为该接口）<br>port hybrid tagged  vlan   30// 允许 VLAN  30 通过，并且通过时携带标签<br><br>port hybrid untagged  vlan  10  20 // 允许 VLAN 10、20  通过，并且通过时不带标签<br><br>补充：tagged 和 untagged 都存在相同 VLAN 时，最后一个配置生效（无法同时存在）<br>port hybrid  pvid  vlan  1// 只影响数据包的接收，接收不带标签的数据包才会打上 PVID 相关标签<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;VLAN&quot;&gt;&lt;a href=&quot;#VLAN&quot; class=&quot;headerlink&quot; title=&quot;VLAN&quot;&gt;&lt;/a&gt;VLAN&lt;/h1&gt;&lt;p&gt;作用：隔离广播域，实现二层的访问控制&lt;br&gt;    通过 VLAN ID 来区分数据来自于哪一个广播域&lt;/p&gt;
&lt;p&gt;在原始</summary>
      
    
    
    
    <category term="技术记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="路由交换基础" scheme="http://example.com/tags/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>07.OSPF多区域与特性</title>
    <link href="http://example.com/2023/11/07/8.OSPF%E5%A4%9A%E5%8C%BA%E5%9F%9F%E4%B8%8E%E7%89%B9%E6%80%A7/"/>
    <id>http://example.com/2023/11/07/8.OSPF%E5%A4%9A%E5%8C%BA%E5%9F%9F%E4%B8%8E%E7%89%B9%E6%80%A7/</id>
    <published>2023-11-07T06:05:08.000Z</published>
    <updated>2023-11-24T08:30:10.937Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OSPF-区域"><a href="#OSPF-区域" class="headerlink" title="OSPF 区域"></a>OSPF 区域</h1><p>OSPF 会以接口来划分区域，一个设备可以有多个接口，每个接口都可以属于一个区域<br>OSPF 可以通过划分区域的方式，减少 LSDB 的规模，减少区域内 LSA 数量</p><p>补充：非骨干区域（普通区域）必须与骨干区域相连</p><ol><li>降低设备的负载，减少设备对 LSA 的计算</li><li>便于管理</li></ol><p>不同区域之间的互访，需要通过 ABR 来进行连接<br>ABR 可以拥有多个区域的 LSDB，便于不同区域的路由计算，以及实现不同区域的设备互访</p><h5 id="配置方式："><a href="#配置方式：" class="headerlink" title="配置方式："></a>配置方式：</h5><p>根据设备的所属区域，把接口划入区域中即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">ospf  1  router-id  3.3.3.3<br>area  1<br>network  10.1.23.3  0.0.0.255// 把 10.1.23.3/24 的接口发布在 OSPF 区域 1 中<br><br>（查看是否存在区域错误的信息）<br>display  ospf  error<br>（查看邻居建立情况）<br>display  ospf  peer  brief<br>（查看接口发布在哪一个区域中）<br>display  ospf  interface<br></code></pre></td></tr></table></figure><ul><li><p>完整意义的 ABR：必须与骨干区域拥有 FULL 的邻接关系，并且还有其他区域的邻接或邻居</p></li><li><p>非完整意义的 ABR：有一个接口属于骨干区域，或与骨干区域有邻居关系（2way），并且还有其他区域的邻接或邻居<br>补充：任意类型的 ABR 都能连通多个区域</p></li><li><p>但是没有骨干区域接口的设备，无法成为 ABR，无法连通不同的区域</p></li></ul><p> 例如：一个接口区域 1 ，另一个接口区域 2，这样的设备是无法成为 ABR 的，也无法连通区域 1 和区域 2</p><h1 id="OSPF-的开销值"><a href="#OSPF-的开销值" class="headerlink" title="OSPF 的开销值"></a>OSPF 的开销值</h1><p>可以修改 OSPF 接口的开销值，影响设备选路<br>例如：<br>R1 有两个接口连接 R2，  A 接口 带宽&#x3D;100M   B 接口带宽&#x3D;1000M<br>R2 有一条  2.2.2.2&#x2F;32 的路由传递给 R1，那么路由的方向<br>R2 为出方向（发出）R1 为入方向（接收）</p><p>如果希望 R1 访问 2.2.2.2 的时候，走带宽更高的链路，可以进入 A 接口，把开销修改得更大</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface  E0/0/A<br>ospf  cost  100// 把接口开销值改为 100<br></code></pre></td></tr></table></figure><p>补充：OSPF 路由只计算入方向接口的开销值，并且会累计多个设备的入接口开销</p><h1 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h1><p>为了防止未授权的第三方设备接入，OSPF 设备可以配置认证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface<br>ospf authentication-mode md5 1 plain 123// 使用加密算法，MD5 计算，密钥号：1  密码：123<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;OSPF-区域&quot;&gt;&lt;a href=&quot;#OSPF-区域&quot; class=&quot;headerlink&quot; title=&quot;OSPF 区域&quot;&gt;&lt;/a&gt;OSPF 区域&lt;/h1&gt;&lt;p&gt;OSPF 会以接口来划分区域，一个设备可以有多个接口，每个接口都可以属于一个区域&lt;br&gt;OSPF 可</summary>
      
    
    
    
    <category term="技术记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="路由交换基础" scheme="http://example.com/tags/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu22.04下安装fusuma</title>
    <link href="http://example.com/2023/11/07/Ubuntu22-04%E4%B8%8B%E5%AE%89%E8%A3%85fusuma/"/>
    <id>http://example.com/2023/11/07/Ubuntu22-04%E4%B8%8B%E5%AE%89%E8%A3%85fusuma/</id>
    <published>2023-11-07T05:25:20.000Z</published>
    <updated>2023-11-24T08:28:57.929Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本人原发布于CSDN"><a href="#本人原发布于CSDN" class="headerlink" title="本人原发布于CSDN"></a><a href="https://blog.csdn.net/longfengshuanwu/article/details/127312152"><strong>本人原发布于CSDN</strong></a></h2><p>本人有一台Ubuntu笔电，对于无法利用笔电上硕大的触控板感到浪费，经过多方寻找（百度），发现了触控手势软件fusuma。但CSDN上的教程很多都过时了，所以有了这篇文章</p><hr><h6 id="安装参考文章：Linux的触屏手势软件安装-Linux安装Fusuma，获得更好的触控板体验"><a href="#安装参考文章：Linux的触屏手势软件安装-Linux安装Fusuma，获得更好的触控板体验" class="headerlink" title="安装参考文章：Linux的触屏手势软件安装,Linux安装Fusuma，获得更好的触控板体验"></a>安装参考文章：<a href="https://blog.csdn.net/weixin_31650287/article/details/116730870">Linux的触屏手势软件安装,Linux安装Fusuma，获得更好的触控板体验</a></h6><p>亲测有效</p><p><a href="https://github.com/iberianpig/fusuma%E2%80%9CGitHub%E9%A1%B9%E7%9B%AE%E2%80%9D">fusuma官网</a></p><hr><h2 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h2><h4 id="授予读取触摸板设备的权限"><a href="#授予读取触摸板设备的权限" class="headerlink" title="授予读取触摸板设备的权限"></a>授予读取触摸板设备的权限</h4><p>必须是 Input 组的成员才能阅读 Fusuma 的触摸板。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">sudo gpasswd -a $USER input<br></code></pre></td></tr></table></figure><p>在不注销或重新启动的情况下应用更改。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">newgrp input<br></code></pre></td></tr></table></figure><p>重启也行</p><h4 id="安装依赖项"><a href="#安装依赖项" class="headerlink" title="安装依赖项"></a>安装依赖项</h4><ol><li>安装libinput-tools<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">sudo apt-get install libinput-tools<br></code></pre></td></tr></table></figure>2.安装Ruby（fusuma基于Ruby运行）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">sudo apt-get install ruby<br></code></pre></td></tr></table></figure>3.安装fusuma<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">sudo gem install fusuma<br></code></pre></td></tr></table></figure>4.安装键盘模拟工具xdotool (optional)(fusuma通过此软件模拟快捷键)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">sudo apt-get install xdotool<br></code></pre></td></tr></table></figure></li></ol><hr><h2 id="如何启用"><a href="#如何启用" class="headerlink" title="如何启用"></a>如何启用</h2><h4 id="1-在终端中输入"><a href="#1-在终端中输入" class="headerlink" title="1.在终端中输入"></a>1.在终端中输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">fusuma<br></code></pre></td></tr></table></figure><p>如果在GNOME中无反应：<br>通过运行以下命令，确保触摸板事件已发送到 GNOME 桌面：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">gsettings set org.gnome.desktop.peripherals.touchpad send-events enabled<br></code></pre></td></tr></table></figure><hr><p>当然，既然是触控手势软件，当然是开机自启最好</p><hr><h4 id="2-开机自启设置"><a href="#2-开机自启设置" class="headerlink" title="2.开机自启设置"></a>2.开机自启设置</h4><p>1.在应用程序集（就是按两次win&#x2F;super键或super+a）中找到“启用应用程序”<br class='item-img' data-src='https://img-blog.csdnimg.cn/ee0cc5e46f82419c97b4eaef88b9a4a5.png'><img src="https://img-blog.csdnimg.cn/ee0cc5e46f82419c97b4eaef88b9a4a5.png" alt="启用应用程序"><br class='item-img' data-src='https://img-blog.csdnimg.cn/3bb1bc39fb244e6eb1a3fc322c1d6473.png'><img src="https://img-blog.csdnimg.cn/3bb1bc39fb244e6eb1a3fc322c1d6473.png" alt="启用应用程序"></p><p>2.打开启用应用程序，找到“添加”按钮<br>3.在“名称”中填写应用名称“fusuma”，在“命令”填写“fusuma”,注释爱咋写咋写。<br class='item-img' data-src='https://img-blog.csdnimg.cn/a1db0cc2ddcd44ddb2d5790c66a3809c.png'><img src="https://img-blog.csdnimg.cn/a1db0cc2ddcd44ddb2d5790c66a3809c.png" alt="爱咋写咋写"><br>3.点击“添加”,fusuma就可以开机自启了。</p><hr><h4 id="3-fusuma配置文件"><a href="#3-fusuma配置文件" class="headerlink" title="3.fusuma配置文件"></a>3.fusuma配置文件</h4><p>Fusuma是一个命令行工具，所有操作都在终端中进行</p><h5 id="打开fusuma的配置文件："><a href="#打开fusuma的配置文件：" class="headerlink" title="打开fusuma的配置文件："></a>打开fusuma的配置文件：</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">nano ~/.config/fusuma/config.yml<br></code></pre></td></tr></table></figure><h4 id="配置文件的绝对路径为："><a href="#配置文件的绝对路径为：" class="headerlink" title="配置文件的绝对路径为："></a>配置文件的绝对路径为：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">/home/用户文件夹/.config/fusuma/config.yml<br></code></pre></td></tr></table></figure><p>用文件夹查看记得勾选“显示隐藏文件”</p><hr><h5 id="如何配置请查阅fusuma官网"><a href="#如何配置请查阅fusuma官网" class="headerlink" title="如何配置请查阅fusuma官网"></a>如何配置请查阅<a href="https://github.com/iberianpig/fusuma%E2%80%9CGitHub%E9%A1%B9%E7%9B%AE%E2%80%9D">fusuma官网</a></h5><p>这是我的配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">#Code:UTF-8<br>swipe:<br>  4:<br>    left:<br>    command: &#x27;xdotool key ctrl+alt+Right&#x27; #四指左滑切换下一个工作区<br>    right:<br>      command: &#x27;xdotool key ctrl+alt+Left&#x27; #四指右滑切换上一个工作区<br>    up:<br>      command: &#x27;xdotool key super+s&#x27; #四指上滑打开工作区预览<br>    down:<br>      command: &#x27;xdotool key super&#x27; #四指下滑按super键<br>  3: <br>    left:<br>      command: &#x27;xdotool key super+Left&#x27; #三指左滑窗口靠左<br>    right:<br>      command: &#x27;xdotool key super+Right&#x27; #三指右滑窗口靠右<br>    up:<br>      command: &#x27;xdotool key alt+tab&#x27; #三指上滑切换窗口<br>    down:<br>      command: &#x27;xdotool key alt+shift+tab&#x27; #三指下滑返回窗口<br>    <br><br>pinch:<br>  4: <br>    in:<br>      command: &#x27;xdotool key ctrl+super+d&#x27; #四指外扩切回桌面<br>    out:<br>      command: &#x27;xdotool key super+a&#x27; #四指内捏打开程序坞<br>  3:<br>    in:<br>      command: &#x27;xdotool key super+f4&#x27; #三指外扩关闭窗口<br>    out:<br>      command: &#x27;xdotool key super+h&#x27; #三指内捏最小化窗口<br>  2:<br>    in:<br>      command: &#x27;xdotool key super+Up&#x27; #双指内捏缩小窗口<br>    out:<br>      command: &#x27;xdotool key super+Down&#x27; #双指外扩全屏窗口<br><br><br><br>#rotate: #旋转<br># 4:<br># clockwise:<br># counterclockwise:<br># 3:<br># clockwise:<br># counterclockwise:<br># 2:<br># clockwise:<br># counterclockwise:<br><br><br>#hold: #拿起 <br><br>threshold: # 滑动/捏合/保持敏感<br>  swipe: 0.3<br>  pinch: 0.1<br>  rotate: 0.2<br>interval: #滑动/捏合/保持之间的延迟<br>  swipe:<br>  pinch:<br>  rotate:<br></code></pre></td></tr></table></figure><hr><h2 id="番外："><a href="#番外：" class="headerlink" title="番外："></a>番外：</h2><p>  <a href="https://github.com/iberianpig/fusuma/issues/113">注意：xdotool有一些问题<br>手势需要几秒钟才能做出反应（#113)</a></p><h4 id="接下来是安装xdotool的替代："><a href="#接下来是安装xdotool的替代：" class="headerlink" title="接下来是安装xdotool的替代："></a>接下来是安装xdotool的替代：</h4><h5 id="fusuma-plugin-sendkey"><a href="#fusuma-plugin-sendkey" class="headerlink" title="fusuma-plugin-sendkey"></a><a href="https://github.com/iberianpig/fusuma-plugin-sendkey">fusuma-plugin-sendkey</a></h5><h5 id="安装依赖项："><a href="#安装依赖项：" class="headerlink" title="安装依赖项："></a>安装依赖项：</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">sudo apt-get install libevdev-dev ruby-dev build-essential<br></code></pre></td></tr></table></figure><h5 id="安装fusuma-plugin-sendkey"><a href="#安装fusuma-plugin-sendkey" class="headerlink" title="安装fusuma-plugin-sendkey"></a>安装fusuma-plugin-sendkey</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">sudo gem install revdev<br> sudo gem install bundler<br> sudo gem install fusuma-plugin-sendkey<br></code></pre></td></tr></table></figure><p> &#x2F;&#x2F;这里可能安装有点慢</p><h5 id="列出可用键位"><a href="#列出可用键位" class="headerlink" title="列出可用键位"></a>列出可用键位</h5> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">$ fusuma-sendkey -l<br></code></pre></td></tr></table></figure><p>  附：<br>  <a href="https://www.zhihu.com/question/403470281%22%E7%9F%A5%E4%B9%8E%22">Super，Hyper，Meta是键盘上的什么键？</a></p><h5 id="测试键位"><a href="#测试键位" class="headerlink" title="测试键位"></a>测试键位</h5>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">fusuma-sendkey LEFTCTRL+T # 测试 ctrl 键 + t 键<br></code></pre></td></tr></table></figure><hr><h4 id="关于使用fusuma-plugin-sendkey的配置文件："><a href="#关于使用fusuma-plugin-sendkey的配置文件：" class="headerlink" title="关于使用fusuma-plugin-sendkey的配置文件："></a>关于使用fusuma-plugin-sendkey的配置文件：</h4><h5 id="详见：官网-fusuma-plugin-sendkey"><a href="#详见：官网-fusuma-plugin-sendkey" class="headerlink" title="详见：官网 fusuma-plugin-sendkey"></a>详见：官网 <a href="https://github.com/iberianpig/fusuma-plugin-sendkey">fusuma-plugin-sendkey</a></h5><h4 id="这是我用的配置文件fusuma-plugin-sendkey版："><a href="#这是我用的配置文件fusuma-plugin-sendkey版：" class="headerlink" title="这是我用的配置文件fusuma-plugin-sendkey版："></a>这是我用的配置文件fusuma-plugin-sendkey版：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">#Code:UTF-8<br>swipe: #滑动<br>  4:<br>    left:<br>      sendkey: &quot;LEFTCTRL+LEFTALT+RIGHT&quot; #四指左滑切换下一个工作区<br>    right:<br>      sendkey: &quot;LEFTCTRL+LEFTALT+LEFT&quot; #四指右滑切换上一个工作区<br>    up:<br>      sendkey: &quot;LEFTMETA+S&quot; #四指上滑打开工作区预览<br>    down:<br>      sendkey: &quot;LEFTMETA&quot; #四指下滑按super键<br>  3:<br>    left:<br>      sendkey: &quot;LEFTMETA+LEFT&quot; #三指左滑窗口靠左<br>    right:<br>      sendkey: &quot;LEFTMETA+RIGHT&quot; #三指右滑窗口靠右<br>    up:<br>      sendkey: &quot;LEFTALT+TAB&quot; #三指上滑切换窗口<br>    down:<br>      sendkey: &quot;LEFTALT+LEFTSHIFT+TAB&quot; #三指下滑返回窗口<br>    <br>    <br>pinch: #捏合<br>  4:<br>    in:<br>      sendkey: &quot;LEFTCTRL+LEFTMETA+D&quot; #四指外扩切回桌面<br>    out:<br>      sendkey: &quot;LEFTMETA+A&quot; #四指内捏打开程序坞<br>  3:<br>    in:<br>      sendkey:  &quot;LEFTALT+F4&quot; #三指外扩关闭窗口<br>    out:<br>      sendkey: &quot;LEFTMETA+H&quot; #三指内捏最小化窗口<br>  2:<br>    in:<br>      sendkey:  &quot;LEFTMETA+UP&quot; #双指内捏缩小窗口<br>    out:<br>      sendkey: &quot;LEFTMETA+DOWN&quot; #双指外扩全屏窗口<br><br><br>#rotate: #旋转<br># 4:<br># clockwise:<br># counterclockwise:<br># 3:<br># clockwise:<br># counterclockwise:<br># 2:<br># clockwise:<br># counterclockwise:<br><br><br>#hold: #拿起 <br><br>threshold: # 滑动/捏合/保持敏感<br>  swipe: 0.3<br>  pinch: 0.1<br>  rotate: 0.2<br>interval: #滑动/捏合/保持之间的延迟<br>  swipe:<br>  pinch:<br>  rotate:<br></code></pre></td></tr></table></figure><hr><p>#以上<br>–byLFSW元立<br>10.14.2022 Fri<br>00:27</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;本人原发布于CSDN&quot;&gt;&lt;a href=&quot;#本人原发布于CSDN&quot; class=&quot;headerlink&quot; title=&quot;本人原发布于CSDN&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://blog.csdn.net/longfengshuanwu/article/d</summary>
      
    
    
    
    <category term="技术记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Linux软件" scheme="http://example.com/tags/Linux%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>06.OSPF基础</title>
    <link href="http://example.com/2023/11/06/7.OSPF%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2023/11/06/7.OSPF%E5%9F%BA%E7%A1%80/</id>
    <published>2023-11-06T07:00:10.000Z</published>
    <updated>2023-11-24T08:25:33.210Z</updated>
    
    <content type="html"><![CDATA[<h3 id="IGP：内部网关协议，用于发现路由和计算路由"><a href="#IGP：内部网关协议，用于发现路由和计算路由" class="headerlink" title="IGP：内部网关协议，用于发现路由和计算路由"></a>IGP：内部网关协议，用于发现路由和计算路由</h3><ol><li>OSPF</li><li>IS-IS<br>3 RIP</li></ol><h3 id="EGP：外部网关协议，用于传递路由和控制路由优选"><a href="#EGP：外部网关协议，用于传递路由和控制路由优选" class="headerlink" title="EGP：外部网关协议，用于传递路由和控制路由优选"></a>EGP：外部网关协议，用于传递路由和控制路由优选</h3><ol><li>BGP</li></ol><hr><h1 id="OSPF（开放式的最短路径优先）"><a href="#OSPF（开放式的最短路径优先）" class="headerlink" title="OSPF（开放式的最短路径优先）"></a>OSPF（开放式的最短路径优先）</h1><p><strong>概念：Router ID（用于唯一标识一台 OSPF 路由器）</strong></p><h2 id="工作过程："><a href="#工作过程：" class="headerlink" title="工作过程："></a>工作过程：</h2><ol><li>邻居发现</li><li>同步链路状态数据库（LSDB）</li><li>SPF 计算（路径计算）</li><li>路由计算</li></ol><h2 id="报文类型："><a href="#报文类型：" class="headerlink" title="报文类型："></a>报文类型：</h2><ol><li><p>Hello 报文：用于发现邻居和建立邻居关系，也可以维护邻居关系<br> 周期性发送（10s）邻居保持时间（4 倍 &#x3D; 40s）</p></li><li><p>DD 报文：（1）用于邻居之间选举主从关系  （2）用于描述 LSA 的摘要信息</p></li><li><p>LSR 报文：请求本端缺少的 LSA 信息（摘要）</p></li><li><p>LSU 报文：响应对方的请求，并回复明细的 LSA 信息</p></li><li><p>LSAck 报文：确认收到的 LSA 信息（摘要）</p></li></ol><h2 id="状态机："><a href="#状态机：" class="headerlink" title="状态机："></a>状态机：</h2><ol><li><p>Down：代表 OSPF 协议刚使能（未建立邻居关系）</p></li><li><p>Attempt：只出现在 NBMA 网络中（在 NBMA 中需要手工指定邻居的 IP 地址才能发起建立）<br> 当本端指定了邻居地址后，会立刻发送 Hello 报文，如果在一段时间内都没有收到对方发送的 Hello 报文，则会从 Down 切换为 Attempt 状态</p></li><li><p>Init：代表收到了对方的 Hello 报文，但对方的 Hello 报文中没有携带本端设备的 Router id<br> 代表双方还需要进行协商</p></li><li><p>2-Way：代表收到了对方的 Hello 报文，并且对方的 Hello 报文携带本端的 Router id<br> 代表邻居关系已经建立</p></li><li><p>Exstart：代表开始同步链路状态数据库，选举主从关系（设备之间建立邻接关系）<br> Router ID 大的设备会成为主路由器（MS&#x3D;1） Router id 小的为从路由器（MS&#x3D;0）<br> 补充：主从路由器通过序列号确保传输可靠性，从路由器必须向主路由器进行回复（没有回复则 5s 重传一次）</p></li><li><p>Exchange：主从选举完成后，从设备会先进入到 Exchange 给主设备进行确认回复，并携带 LSA 的摘要信息（列表）<br> 主设备收到后也会进入到 Exchange，并且给从设备发送 LSA 的摘要信息</p></li><li><p>Loading：如果双方的 LSDB 没有同步，则进入 Loading 发起 LSA 的请求</p></li><li><p>Full：双方通过 Loading 状态完全同步了 LSDB，最终进入 Full 状态（代表 LSDB 完全同步，邻接状态建立完成）<br> （补充：如果在 Exchange 中发现 LSDB 已经完成同步，也可以直接到达 Full 状态）</p></li></ol><h2 id="网络类型"><a href="#网络类型" class="headerlink" title="网络类型"></a>网络类型</h2><ol><li><p>P2P（点到点）：当 OSPF 协议发现接口类型为（光口或者串口等）链路层协议为 PPP 或 HDLC 则网络类型为 P2P</p></li><li><p>BMA（广播多路访问）：当网络类型为以太网，则默认的网络类型为 BMA</p></li><li><p>NBMA（非广播多路访问）在帧中继（FR）网络中，默认的网络类型 NBMA</p></li><li><p>P2MP（点到多点）：需要手工修改</p></li></ol><p>在 MA 的网络中（BMA、NBMA）会选举 DR 和 BDR 来减少邻接关系<br>选举 DR 会根据优先级来选择（默认：1）可选范围 0—255，但是 0 不参与 DR 选举（大）<br>如果优先级一致，则比较 Router id（大）</p><h2 id="区域分类"><a href="#区域分类" class="headerlink" title="区域分类"></a>区域分类</h2><ol><li>骨干区域：是 OSPF 网络的交通枢纽，所有的非骨干区域（普通区域）都需要与之相连</li><li>普通区域：除 area 0 以外的（除骨干以外的都为普通区域）</li></ol><p>补充：OSPF 是以接口来划分区域的，两个设备的接口如果处于不同区域，则无法建立邻居</p><h2 id="配置命令："><a href="#配置命令：" class="headerlink" title="配置命令："></a>配置命令：</h2><ol><li><p>接口配置 IP 地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface  G0/0/X<br>ip address  10.1.1.1   24// 进入 G0/0/X 接口，配置接口地址为：10.1.1.1/24<br></code></pre></td></tr></table></figure></li><li><p>创建 OSPF 进程，并且手工指定 router id</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">ospf  1   router-id  1.1.1.1// 创建 OSPF 进程，ID=1 ，router id 为：1.1.1.1（每台设备都需要配置独立的 Router id，不能冲突）<br></code></pre></td></tr></table></figure></li><li><p>进入进程后，把设备自身的接口通告给邻居</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">area    0<br>network   10.1.1.1  0.0.0.255// 进入到骨干区域 0 中，把自己的接口 10.1.1.1/24 通告给邻居（掩码 24 = 255.255.255.0  |  通配符 = 0.0.0.255）<br></code></pre></td></tr></table></figure></li></ol><p>（配置方式 2）取代步骤 2 和 3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">ospf  1   router-id  1.1.1.1// 创建 OSPF 进程，配置 Router id<br>area  0// 创建骨干区域 0<br>quit// 退出<br><br>interface  G0/0/X// 进入 G0/0/X 接口<br>ospf  enable  1   area 0// 把该接口发布到 OSPF 进程 1 区域 0 中<br></code></pre></td></tr></table></figure><ol start="4"><li><p>查看 OSPF 邻居关系</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">display   ospf   peer   brief// 查看邻居建立的摘要信息<br></code></pre></td></tr></table></figure></li><li><p>查看路由表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">display  ip  routing-table// 有对端设备的接口路由才能访问（测试 ping -a 1.1.1.1  4.4.4.4  使用 1.1.1.1 接口访问 4.4.4.4 目的地址）<br></code></pre></td></tr></table></figure></li><li><p>修改接口优先级</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">interface G0/0/XDR 是以物理接口的优先级来进行比较的，默认为：1  越大越好（0—255）   0 不参与 DR 选举<br> ospf dr-priority 100// 例如：把 AR1 的 G0/0/X 接口优先级修改为 100<br></code></pre></td></tr></table></figure></li><li><p>查看是否 DR 设备</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">display  ospf  interface  G0/0/X// 查看 OSPF 接口信息即可<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;IGP：内部网关协议，用于发现路由和计算路由&quot;&gt;&lt;a href=&quot;#IGP：内部网关协议，用于发现路由和计算路由&quot; class=&quot;headerlink&quot; title=&quot;IGP：内部网关协议，用于发现路由和计算路由&quot;&gt;&lt;/a&gt;IGP：内部网关协议，用于发现路由和计算</summary>
      
    
    
    
    <category term="技术记录" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="路由交换基础" scheme="http://example.com/tags/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
</feed>
